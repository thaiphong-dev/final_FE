{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"pager\",\"lazyPlaceholder\",\"tabBar\",\"tabBarOptions\",\"state\",\"navigation\",\"descriptors\",\"sceneContainerStyle\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import{TabView}from'react-native-tab-view';import{NavigationHelpersContext,TabActions,useTheme}from'@react-navigation/native';import MaterialTopTabBar from\"./MaterialTopTabBar\";export default function MaterialTopTabView(_ref){var pager=_ref.pager,lazyPlaceholder=_ref.lazyPlaceholder,_ref$tabBar=_ref.tabBar,tabBar=_ref$tabBar===void 0?function(props){return React.createElement(MaterialTopTabBar,props);}:_ref$tabBar,tabBarOptions=_ref.tabBarOptions,state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors,sceneContainerStyle=_ref.sceneContainerStyle,rest=_objectWithoutProperties(_ref,_excluded);var _useTheme=useTheme(),colors=_useTheme.colors;var renderTabBar=function renderTabBar(props){return tabBar(_objectSpread(_objectSpread(_objectSpread({},tabBarOptions),props),{},{state:state,navigation:navigation,descriptors:descriptors}));};return React.createElement(NavigationHelpersContext.Provider,{value:navigation},React.createElement(TabView,_extends({},rest,{onIndexChange:function onIndexChange(index){return navigation.dispatch(_objectSpread(_objectSpread({},TabActions.jumpTo(state.routes[index].name)),{},{target:state.key}));},renderScene:function renderScene(_ref2){var route=_ref2.route;return descriptors[route.key].render();},navigationState:state,renderTabBar:renderTabBar,renderPager:pager,renderLazyPlaceholder:lazyPlaceholder,onSwipeStart:function onSwipeStart(){return navigation.emit({type:'swipeStart'});},onSwipeEnd:function onSwipeEnd(){return navigation.emit({type:'swipeEnd'});},sceneContainerStyle:[{backgroundColor:colors.background},sceneContainerStyle]})));}","map":{"version":3,"sources":["MaterialTopTabView.tsx"],"names":["tabBar","props","rest","colors","useTheme","renderTabBar","state","navigation","descriptors","index","TabActions","target","key","route","type","backgroundColor","background"],"mappings":"gzCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,OAAA,KAAA,uBAAA,CACA,OAAA,wBAAA,CAAA,UAAA,CAAA,QAAA,KAAA,0BAAA,CAQA,MAAA,CAAA,iBAAA,2BAeA,cAAe,SAAA,CAAA,kBAAA,MAUL,IAViC,CAAA,KAUjC,MAViC,KAUjC,CAViC,eAUjC,MAViC,eAUjC,kBAPRA,MAOQ,CAPRA,MAOQ,sBAPEC,SAAAA,KAAD,QAAmC,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAHH,KAGG,CAAnC,EAOD,aAViC,aAUjC,MAViC,aAUjC,CAViC,KAUjC,MAViC,KAUjC,CAViC,UAUjC,MAViC,UAUjC,CAViC,WAUjC,MAViC,WAUjC,CAViC,mBAUjC,MAViC,mBAUjC,CADLC,IACK,0CACR,cAAmBE,QAAnB,EAAA,CAAQD,MAAR,WAAQA,MAAR,CAEA,GAAME,CAAAA,YAAY,CAAIJ,QAAhBI,CAAAA,YAAgBJ,CAAAA,KAAD,CAA+B,CAClD,MAAOD,CAAAA,MAAM,8CAAC,aAAD,EAAC,KAAD,MAGXM,KAAK,CAHO,KAAD,CAIXC,UAAU,CAJE,UAAD,CAKXC,WAAW,CAAEA,WALF,GAAb,CADF,CAAA,CAUA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAA,QAAA,CAAA,CAAmC,KAAK,CAAED,UAA1C,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,aAAa,CAAGE,uBAAAA,KAAD,QACb,CAAA,UAAU,CAAV,QAAA,gCACKC,UAAU,CAAVA,MAAAA,CAAkBJ,KAAK,CAALA,MAAAA,CAAAA,KAAAA,EADH,IACfI,CADL,MAEEC,MAAM,CAAEL,KAAK,CAACM,GAFhB,GADa,EAFjB,CAQE,WAAW,CAAE,+BAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeL,CAAAA,WAAW,CAACK,KAAK,CAAjBL,GAAW,CAAXA,CAR9B,MAQ8BA,EAAf,EARf,CASE,eAAe,CATjB,KAAA,CAUE,YAAY,CAVd,YAAA,CAWE,WAAW,CAXb,KAAA,CAYE,qBAAqB,CAZvB,eAAA,CAaE,YAAY,CAAE,8BAAM,CAAA,UAAU,CAAV,IAAA,CAAgB,CAAEM,IAAI,CAAE,YAAR,CAAhB,CAAN,EAbhB,CAcE,UAAU,CAAE,4BAAM,CAAA,UAAU,CAAV,IAAA,CAAgB,CAAEA,IAAI,CAAE,UAAR,CAAhB,CAAN,EAdd,CAeE,mBAAmB,CAAE,CACnB,CAAEC,eAAe,CAAEZ,MAAM,CAACa,UAA1B,CADmB,CAAA,mBAAA,CAfvB,CAAA,CAAA,CADF,CADF,CAwBD","sourcesContent":["import * as React from 'react';\nimport { TabView, SceneRendererProps } from 'react-native-tab-view';\nimport {\n  NavigationHelpersContext,\n  TabNavigationState,\n  TabActions,\n  ParamListBase,\n  useTheme,\n} from '@react-navigation/native';\n\nimport MaterialTopTabBar from './MaterialTopTabBar';\nimport type {\n  MaterialTopTabDescriptorMap,\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationHelpers,\n  MaterialTopTabBarProps,\n} from '../types';\n\ntype Props = MaterialTopTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialTopTabNavigationHelpers;\n  descriptors: MaterialTopTabDescriptorMap;\n  tabBarPosition?: 'top' | 'bottom';\n};\n\nexport default function MaterialTopTabView({\n  pager,\n  lazyPlaceholder,\n  tabBar = (props: MaterialTopTabBarProps) => <MaterialTopTabBar {...props} />,\n  tabBarOptions,\n  state,\n  navigation,\n  descriptors,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { colors } = useTheme();\n\n  const renderTabBar = (props: SceneRendererProps) => {\n    return tabBar({\n      ...tabBarOptions,\n      ...props,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n    });\n  };\n\n  return (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <TabView\n        {...rest}\n        onIndexChange={(index) =>\n          navigation.dispatch({\n            ...TabActions.jumpTo(state.routes[index].name),\n            target: state.key,\n          })\n        }\n        renderScene={({ route }) => descriptors[route.key].render()}\n        navigationState={state}\n        renderTabBar={renderTabBar}\n        renderPager={pager}\n        renderLazyPlaceholder={lazyPlaceholder}\n        onSwipeStart={() => navigation.emit({ type: 'swipeStart' })}\n        onSwipeEnd={() => navigation.emit({ type: 'swipeEnd' })}\n        sceneContainerStyle={[\n          { backgroundColor: colors.background },\n          sceneContainerStyle,\n        ]}\n      />\n    </NavigationHelpersContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}