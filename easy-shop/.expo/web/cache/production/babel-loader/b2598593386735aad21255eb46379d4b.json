{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import{cond,sub,divide,multiply,add,pow,lessOrEq,and,greaterThan}from\"./../base\";import AnimatedValue from\"./../core/InternalAnimatedValue\";function stiffnessFromOrigamiValue(oValue){return(oValue-30)*3.62+194;}function dampingFromOrigamiValue(oValue){return(oValue-8)*3+25;}function stiffnessFromOrigamiNode(oValue){return add(multiply(sub(oValue,30),3.62),194);}function dampingFromOrigamiNode(oValue){return add(multiply(sub(oValue,8),3),25);}function makeConfigFromOrigamiTensionAndFriction(prevConfig){var tension=prevConfig.tension,friction=prevConfig.friction,rest=_objectWithoutProperties(prevConfig,[\"tension\",\"friction\"]);return _objectSpread(_objectSpread({},rest),{},{stiffness:typeof tension==='number'?stiffnessFromOrigamiValue(tension):stiffnessFromOrigamiNode(tension),damping:typeof friction==='number'?dampingFromOrigamiValue(friction):dampingFromOrigamiNode(friction)});}function makeConfigFromBouncinessAndSpeed(prevConfig){var bounciness=prevConfig.bounciness,speed=prevConfig.speed,rest=_objectWithoutProperties(prevConfig,[\"bounciness\",\"speed\"]);if(typeof bounciness==='number'&&typeof speed==='number'){return fromBouncinessAndSpeedNumbers(bounciness,speed,rest);}return fromBouncinessAndSpeedNodes(bounciness,speed,rest);}function fromBouncinessAndSpeedNodes(bounciness,speed,rest){function normalize(value,startValue,endValue){return divide(sub(value,startValue),sub(endValue,startValue));}function projectNormal(n,start,end){return add(start,multiply(n,sub(end,start)));}function linearInterpolation(t,start,end){return add(multiply(t,end),multiply(sub(1,t),start));}function quadraticOutInterpolation(t,start,end){return linearInterpolation(sub(multiply(2,t),multiply(t,t)),start,end);}function b3Friction1(x){return add(sub(multiply(0.0007,pow(x,3)),multiply(0.031,pow(x,2))),multiply(0.64,x),1.28);}function b3Friction2(x){return add(sub(multiply(0.000044,pow(x,3)),multiply(0.006,pow(x,2))),multiply(0.36,x),2);}function b3Friction3(x){return add(sub(multiply(0.00000045,pow(x,3)),multiply(0.000332,pow(x,2))),multiply(0.1078,x),5.84);}function b3Nobounce(tension){return cond(lessOrEq(tension,18),b3Friction1(tension),cond(and(greaterThan(tension,18),lessOrEq(tension,44)),b3Friction2(tension),b3Friction3(tension)));}var b=normalize(divide(bounciness,1.7),0,20);b=projectNormal(b,0,0.8);var s=normalize(divide(speed,1.7),0,20);var bouncyTension=projectNormal(s,0.5,200);var bouncyFriction=quadraticOutInterpolation(b,b3Nobounce(bouncyTension),0.01);return _objectSpread(_objectSpread({},rest),{},{stiffness:stiffnessFromOrigamiNode(bouncyTension),damping:dampingFromOrigamiNode(bouncyFriction)});}function fromBouncinessAndSpeedNumbers(bounciness,speed,rest){function normalize(value,startValue,endValue){return(value-startValue)/(endValue-startValue);}function projectNormal(n,start,end){return start+n*(end-start);}function linearInterpolation(t,start,end){return t*end+(1-t)*start;}function quadraticOutInterpolation(t,start,end){return linearInterpolation(2*t-t*t,start,end);}function b3Friction1(x){return 0.0007*Math.pow(x,3)-0.031*Math.pow(x,2)+0.64*x+1.28;}function b3Friction2(x){return 0.000044*Math.pow(x,3)-0.006*Math.pow(x,2)+0.36*x+2;}function b3Friction3(x){return 0.00000045*Math.pow(x,3)-0.000332*Math.pow(x,2)+0.1078*x+5.84;}function b3Nobounce(tension){if(tension<=18){return b3Friction1(tension);}else if(tension>18&&tension<=44){return b3Friction2(tension);}else{return b3Friction3(tension);}}var b=normalize(bounciness/1.7,0,20);b=projectNormal(b,0,0.8);var s=normalize(speed/1.7,0,20);var bouncyTension=projectNormal(s,0.5,200);var bouncyFriction=quadraticOutInterpolation(b,b3Nobounce(bouncyTension),0.01);return _objectSpread(_objectSpread({},rest),{},{stiffness:stiffnessFromOrigamiValue(bouncyTension),damping:dampingFromOrigamiValue(bouncyFriction)});}function makeDefaultConfig(){return{stiffness:new AnimatedValue(100),mass:new AnimatedValue(1),damping:new AnimatedValue(10),overshootClamping:false,restSpeedThreshold:0.001,restDisplacementThreshold:0.001,toValue:new AnimatedValue(0)};}export default{makeDefaultConfig:makeDefaultConfig,makeConfigFromBouncinessAndSpeed:makeConfigFromBouncinessAndSpeed,makeConfigFromOrigamiTensionAndFriction:makeConfigFromOrigamiTensionAndFriction};","map":{"version":3,"sources":["SpringUtils.js"],"names":["oValue","add","multiply","sub","friction","stiffness","stiffnessFromOrigamiValue","stiffnessFromOrigamiNode","damping","dampingFromOrigamiValue","dampingFromOrigamiNode","speed","fromBouncinessAndSpeedNumbers","fromBouncinessAndSpeedNodes","divide","linearInterpolation","pow","cond","lessOrEq","b3Friction1","and","greaterThan","b3Friction2","b3Friction3","b","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","value","endValue","start","n","end","t","Math","tension","bounciness","mass","overshootClamping","restSpeedThreshold","restDisplacementThreshold","toValue","makeDefaultConfig","makeConfigFromBouncinessAndSpeed","makeConfigFromOrigamiTensionAndFriction"],"mappings":"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","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  add,\n  pow,\n  lessOrEq,\n  and,\n  greaterThan,\n} from './../base';\nimport AnimatedValue from './../core/InternalAnimatedValue';\n\nfunction stiffnessFromOrigamiValue(oValue) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue) {\n  return (oValue - 8) * 3 + 25;\n}\n\nfunction stiffnessFromOrigamiNode(oValue) {\n  return add(multiply(sub(oValue, 30), 3.62), 194);\n}\n\nfunction dampingFromOrigamiNode(oValue) {\n  return add(multiply(sub(oValue, 8), 3), 25);\n}\n\nfunction makeConfigFromOrigamiTensionAndFriction(prevConfig) {\n  const { tension, friction, ...rest } = prevConfig;\n  return {\n    ...rest,\n    stiffness:\n      typeof tension === 'number'\n        ? stiffnessFromOrigamiValue(tension)\n        : stiffnessFromOrigamiNode(tension),\n    damping:\n      typeof friction === 'number'\n        ? dampingFromOrigamiValue(friction)\n        : dampingFromOrigamiNode(friction),\n  };\n}\n\nfunction makeConfigFromBouncinessAndSpeed(prevConfig) {\n  const { bounciness, speed, ...rest } = prevConfig;\n  if (typeof bounciness === 'number' && typeof speed === 'number') {\n    return fromBouncinessAndSpeedNumbers(bounciness, speed, rest);\n  }\n  return fromBouncinessAndSpeedNodes(bounciness, speed, rest);\n}\n\nfunction fromBouncinessAndSpeedNodes(bounciness, speed, rest) {\n  function normalize(value, startValue, endValue) {\n    return divide(sub(value, startValue), sub(endValue, startValue));\n  }\n\n  function projectNormal(n, start, end) {\n    return add(start, multiply(n, sub(end, start)));\n  }\n\n  function linearInterpolation(t, start, end) {\n    return add(multiply(t, end), multiply(sub(1, t), start));\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(sub(multiply(2, t), multiply(t, t)), start, end);\n  }\n\n  function b3Friction1(x) {\n    return add(\n      sub(multiply(0.0007, pow(x, 3)), multiply(0.031, pow(x, 2))),\n      multiply(0.64, x),\n      1.28\n    );\n  }\n\n  function b3Friction2(x) {\n    return add(\n      sub(multiply(0.000044, pow(x, 3)), multiply(0.006, pow(x, 2))),\n      multiply(0.36, x),\n      2\n    );\n  }\n\n  function b3Friction3(x) {\n    return add(\n      sub(multiply(0.00000045, pow(x, 3)), multiply(0.000332, pow(x, 2))),\n      multiply(0.1078, x),\n      5.84\n    );\n  }\n\n  function b3Nobounce(tension) {\n    return cond(\n      lessOrEq(tension, 18),\n      b3Friction1(tension),\n      cond(\n        and(greaterThan(tension, 18), lessOrEq(tension, 44)),\n        b3Friction2(tension),\n        b3Friction3(tension)\n      )\n    );\n  }\n\n  let b = normalize(divide(bounciness, 1.7), 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  const s = normalize(divide(speed, 1.7), 0, 20);\n  const bouncyTension = projectNormal(s, 0.5, 200);\n  const bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01\n  );\n  return {\n    ...rest,\n    stiffness: stiffnessFromOrigamiNode(bouncyTension),\n    damping: dampingFromOrigamiNode(bouncyFriction),\n  };\n}\n\nfunction fromBouncinessAndSpeedNumbers(bounciness, speed, rest) {\n  function normalize(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n, start, end) {\n    return start + n * (end - start);\n  }\n\n  function linearInterpolation(t, start, end) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t, start, end) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x) {\n    return (\n      0.00000045 * Math.pow(x, 3) -\n      0.000332 * Math.pow(x, 2) +\n      0.1078 * x +\n      5.84\n    );\n  }\n\n  function b3Nobounce(tension) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  let b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  const s = normalize(speed / 1.7, 0, 20);\n  const bouncyTension = projectNormal(s, 0.5, 200);\n  const bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01\n  );\n\n  return {\n    ...rest,\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction),\n  };\n}\n\nfunction makeDefaultConfig() {\n  return {\n    stiffness: new AnimatedValue(100),\n    mass: new AnimatedValue(1),\n    damping: new AnimatedValue(10),\n    overshootClamping: false,\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n    toValue: new AnimatedValue(0),\n  };\n}\n\nexport default {\n  makeDefaultConfig,\n  makeConfigFromBouncinessAndSpeed,\n  makeConfigFromOrigamiTensionAndFriction,\n};\n"]},"metadata":{},"sourceType":"module"}