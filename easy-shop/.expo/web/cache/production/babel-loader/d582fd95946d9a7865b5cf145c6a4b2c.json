{"ast":null,"code":"import{cond,sub,divide,multiply,sqrt,add,block,set,exp,sin,cos,eq,or,neq,and,lessThan,greaterThan,proc,min,abs}from\"../base\";import AnimatedValue from\"../core/InternalAnimatedValue\";var MAX_STEPS_MS=64;function spring(clock,state,config){var lastTime=cond(state.time,state.time,clock);var deltaTime=min(sub(clock,lastTime),MAX_STEPS_MS);var c=config.damping;var m=config.mass;var k=config.stiffness;var v0=multiply(-1,state.velocity);var x0=sub(config.toValue,state.position);var zeta=divide(c,multiply(2,sqrt(multiply(k,m))));var omega0=sqrt(divide(k,m));var omega1=multiply(omega0,sqrt(sub(1,multiply(zeta,zeta))));var t=divide(deltaTime,1000);var sin1=sin(multiply(omega1,t));var cos1=cos(multiply(omega1,t));var underDampedEnvelope=exp(multiply(-1,zeta,omega0,t));var underDampedFrag1=multiply(underDampedEnvelope,add(multiply(sin1,divide(add(v0,multiply(zeta,omega0,x0)),omega1)),multiply(x0,cos1)));var underDampedPosition=sub(config.toValue,underDampedFrag1);var underDampedVelocity=sub(multiply(zeta,omega0,underDampedFrag1),multiply(underDampedEnvelope,sub(multiply(cos1,add(v0,multiply(zeta,omega0,x0))),multiply(omega1,x0,sin1))));var criticallyDampedEnvelope=exp(multiply(-1,omega0,t));var criticallyDampedPosition=sub(config.toValue,multiply(criticallyDampedEnvelope,add(x0,multiply(add(v0,multiply(omega0,x0)),t))));var criticallyDampedVelocity=multiply(criticallyDampedEnvelope,add(multiply(v0,sub(multiply(t,omega0),1)),multiply(t,x0,omega0,omega0)));var prevPosition=state.prevPosition?state.prevPosition:new AnimatedValue(0);var isOvershooting=cond(and(config.overshootClamping,neq(config.stiffness,0)),cond(lessThan(prevPosition,config.toValue),greaterThan(state.position,config.toValue),lessThan(state.position,config.toValue)));var isVelocity=lessThan(abs(state.velocity),config.restSpeedThreshold);var isDisplacement=or(eq(config.stiffness,0),lessThan(abs(sub(config.toValue,state.position)),config.restDisplacementThreshold));return block([set(prevPosition,state.position),cond(lessThan(zeta,1),[set(state.position,underDampedPosition),set(state.velocity,underDampedVelocity)],[set(state.position,criticallyDampedPosition),set(state.velocity,criticallyDampedVelocity)]),set(state.time,clock),cond(or(isOvershooting,and(isVelocity,isDisplacement)),[cond(neq(config.stiffness,0),[set(state.velocity,0),set(state.position,config.toValue)]),set(state.finished,1)])]);}var procSpring=proc(function(finished,velocity,position,time,prevPosition,toValue,damping,mass,stiffness,overshootClamping,restSpeedThreshold,restDisplacementThreshold,clock){return spring(clock,{finished:finished,velocity:velocity,position:position,time:time,prevPosition:prevPosition},{toValue:toValue,damping:damping,mass:mass,stiffness:stiffness,overshootClamping:overshootClamping,restDisplacementThreshold:restDisplacementThreshold,restSpeedThreshold:restSpeedThreshold});});export default(function(clock,_ref,_ref2){var finished=_ref.finished,velocity=_ref.velocity,position=_ref.position,time=_ref.time,prevPosition=_ref.prevPosition;var toValue=_ref2.toValue,damping=_ref2.damping,mass=_ref2.mass,stiffness=_ref2.stiffness,overshootClamping=_ref2.overshootClamping,restDisplacementThreshold=_ref2.restDisplacementThreshold,restSpeedThreshold=_ref2.restSpeedThreshold;return procSpring(finished,velocity,position,time,prevPosition,toValue,damping,mass,stiffness,overshootClamping,restSpeedThreshold,restDisplacementThreshold,clock);});","map":{"version":3,"sources":["spring.js"],"names":["MAX_STEPS_MS","lastTime","cond","state","deltaTime","min","sub","c","config","m","k","v0","multiply","x0","zeta","divide","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","add","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","prevPosition","isOvershooting","and","neq","lessThan","greaterThan","isVelocity","abs","isDisplacement","or","eq","block","set","procSpring","proc","spring","finished","velocity","position","time","toValue","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold"],"mappings":"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","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  sqrt,\n  add,\n  block,\n  set,\n  exp,\n  sin,\n  cos,\n  eq,\n  or,\n  neq,\n  and,\n  lessThan,\n  greaterThan,\n  proc,\n  min,\n  abs,\n} from '../base';\nimport AnimatedValue from '../core/InternalAnimatedValue';\n\nconst MAX_STEPS_MS = 64;\n\nfunction spring(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n\n  const deltaTime = min(sub(clock, lastTime), MAX_STEPS_MS);\n\n  const c = config.damping;\n  const m = config.mass;\n  const k = config.stiffness;\n\n  const v0 = multiply(-1, state.velocity);\n  const x0 = sub(config.toValue, state.position);\n\n  const zeta = divide(c, multiply(2, sqrt(multiply(k, m)))); // damping ratio\n  const omega0 = sqrt(divide(k, m)); // undamped angular frequency of the oscillator (rad/ms)\n  const omega1 = multiply(omega0, sqrt(sub(1, multiply(zeta, zeta)))); // exponential decay\n\n  const t = divide(deltaTime, 1000); // in seconds\n\n  const sin1 = sin(multiply(omega1, t));\n  const cos1 = cos(multiply(omega1, t));\n\n  // under damped\n  const underDampedEnvelope = exp(multiply(-1, zeta, omega0, t));\n  const underDampedFrag1 = multiply(\n    underDampedEnvelope,\n    add(\n      multiply(sin1, divide(add(v0, multiply(zeta, omega0, x0)), omega1)),\n      multiply(x0, cos1)\n    )\n  );\n  const underDampedPosition = sub(config.toValue, underDampedFrag1);\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity = sub(\n    multiply(zeta, omega0, underDampedFrag1),\n    multiply(\n      underDampedEnvelope,\n      sub(\n        multiply(cos1, add(v0, multiply(zeta, omega0, x0))),\n        multiply(omega1, x0, sin1)\n      )\n    )\n  );\n\n  // critically damped\n  const criticallyDampedEnvelope = exp(multiply(-1, omega0, t));\n  const criticallyDampedPosition = sub(\n    config.toValue,\n    multiply(\n      criticallyDampedEnvelope,\n      add(x0, multiply(add(v0, multiply(omega0, x0)), t))\n    )\n  );\n  const criticallyDampedVelocity = multiply(\n    criticallyDampedEnvelope,\n    add(\n      multiply(v0, sub(multiply(t, omega0), 1)),\n      multiply(t, x0, omega0, omega0)\n    )\n  );\n\n  // conditions for stopping the spring animations\n  const prevPosition = state.prevPosition\n    ? state.prevPosition\n    : new AnimatedValue(0);\n\n  const isOvershooting = cond(\n    and(config.overshootClamping, neq(config.stiffness, 0)),\n    cond(\n      lessThan(prevPosition, config.toValue),\n      greaterThan(state.position, config.toValue),\n      lessThan(state.position, config.toValue)\n    )\n  );\n  const isVelocity = lessThan(abs(state.velocity), config.restSpeedThreshold);\n  const isDisplacement = or(\n    eq(config.stiffness, 0),\n    lessThan(\n      abs(sub(config.toValue, state.position)),\n      config.restDisplacementThreshold\n    )\n  );\n\n  return block([\n    set(prevPosition, state.position),\n    cond(\n      lessThan(zeta, 1),\n      [\n        set(state.position, underDampedPosition),\n        set(state.velocity, underDampedVelocity),\n      ],\n      [\n        set(state.position, criticallyDampedPosition),\n        set(state.velocity, criticallyDampedVelocity),\n      ]\n    ),\n    set(state.time, clock),\n    cond(or(isOvershooting, and(isVelocity, isDisplacement)), [\n      cond(neq(config.stiffness, 0), [\n        set(state.velocity, 0),\n        set(state.position, config.toValue),\n      ]),\n      set(state.finished, 1),\n    ]),\n  ]);\n}\n\nconst procSpring = proc(\n  (\n    finished,\n    velocity,\n    position,\n    time,\n    prevPosition,\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    clock\n  ) =>\n    spring(\n      clock,\n      {\n        finished,\n        velocity,\n        position,\n        time,\n        // @ts-ignore\n        prevPosition,\n      },\n      {\n        toValue,\n        damping,\n        mass,\n        stiffness,\n        overshootClamping,\n        restDisplacementThreshold,\n        restSpeedThreshold,\n      }\n    )\n);\n\nexport default (\n  clock,\n  {\n    finished,\n    velocity,\n    position,\n    time,\n    // @ts-ignore\n    prevPosition,\n  },\n  {\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restDisplacementThreshold,\n    restSpeedThreshold,\n  }\n) =>\n  procSpring(\n    finished,\n    velocity,\n    position,\n    time,\n    prevPosition,\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    clock\n  );\n"]},"metadata":{},"sourceType":"module"}