{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import invariant from'fbjs/lib/invariant';import{adapt}from\"../core/AnimatedBlock\";import{val}from\"../val\";import AnimatedNode from\"./AnimatedNode\";var AnimatedCond=function(_AnimatedNode){_inherits(AnimatedCond,_AnimatedNode);var _super=_createSuper(AnimatedCond);function AnimatedCond(condition,ifBlock,elseBlock){var _this;_classCallCheck(this,AnimatedCond);invariant(condition instanceof AnimatedNode,\"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \".concat(condition));invariant(ifBlock instanceof AnimatedNode,\"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \".concat(ifBlock));invariant(elseBlock instanceof AnimatedNode||elseBlock===undefined,\"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \".concat(elseBlock));_this=_super.call(this,{type:'cond',cond:condition,ifBlock:ifBlock,elseBlock:elseBlock},[condition,ifBlock,elseBlock]);_defineProperty(_assertThisInitialized(_this),\"_condition\",void 0);_defineProperty(_assertThisInitialized(_this),\"_ifBlock\",void 0);_defineProperty(_assertThisInitialized(_this),\"_elseBlock\",void 0);_this._condition=condition;_this._ifBlock=ifBlock;_this._elseBlock=elseBlock;return _this;}_createClass(AnimatedCond,[{key:\"toString\",value:function toString(){return\"AnimatedCond, id: \".concat(this.__nodeID);}},{key:\"__onEvaluate\",value:function __onEvaluate(){if(val(this._condition)){return val(this._ifBlock);}else{return this._elseBlock!==undefined?val(this._elseBlock):undefined;}}}]);return AnimatedCond;}(AnimatedNode);export function createAnimatedCond(cond,ifBlock,elseBlock){return new AnimatedCond(adapt(cond),adapt(ifBlock),elseBlock===undefined?undefined:adapt(elseBlock));}","map":{"version":3,"sources":["AnimatedCond.js"],"names":["constructor","invariant","condition","ifBlock","elseBlock","type","cond","toString","__onEvaluate","val","adapt"],"mappings":"4wCAAA,MAAA,CAAA,SAAA,KAAA,oBAAA,CACA,OAAA,KAAA,6BACA,OAAA,GAAA,cACA,MAAA,CAAA,YAAA,sB,GAEA,CAAA,Y,qGAKEA,sBAAW,SAAXA,CAAW,OAAXA,CAAW,SAAXA,CAA2C,8CACzCC,SAAS,CACPC,SAAS,WADF,CAAA,YAAA,CAAA,wFAAA,MAAA,CAATD,SAAS,CAAA,CAATA,CAIAA,SAAS,CACPE,OAAO,WADA,CAAA,YAAA,CAAA,yFAAA,MAAA,CAATF,OAAS,CAAA,CAATA,CAIAA,SAAS,CACPG,SAAS,WAATA,CAAAA,YAAAA,EAAqCA,SAAS,GADvC,SAAA,CAAA,+GAAA,MAAA,CAATH,SAAS,CAAA,CAATA,CAIA,uBACE,CACEI,IAAI,CADN,MAAA,CAEEC,IAAI,CAFN,SAAA,CAGEH,OAHF,CAGEA,OAHF,CAIEC,SAAAA,CAAAA,SAJF,CADF,CAOE,CAAA,SAAA,CAAA,OAAA,CAPF,SAOE,CAPF,EAbyC,eAAA,+BAAA,YAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,+BAAA,UAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,+BAAA,YAAA,CAAA,IAAA,EAAA,CAAA,CAsBzC,MAAA,UAAA,CAAA,SAAA,CACA,MAAA,QAAA,CAAA,OAAA,CACA,MAAA,UAAA,CAAA,SAAA,CAxByC,aAyB1C,C,iDAEDG,mBAAW,CACT,MAAA,qBAAA,MAAA,CAA4B,KAA5B,QAAA,CAAA,CACD,C,4BAEDC,uBAAe,CACb,GAAIC,GAAG,CAAC,KAAR,UAAO,CAAP,CAA0B,CACxB,MAAOA,CAAAA,GAAG,CAAC,KAAX,QAAU,CAAV,CADF,CAAA,IAEO,CACL,MAAO,MAAA,UAAA,GAAA,SAAA,CAAgCA,GAAG,CAAC,KAApC,UAAmC,CAAnC,CAAP,SAAA,CACD,CACF,C,0BA1CH,Y,EA6CA,MAAO,SAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAsD,CAC3D,MAAO,IAAA,CAAA,YAAA,CACLC,KAAK,CADA,IACA,CADA,CAELA,KAAK,CAFA,OAEA,CAFA,CAGLN,SAAS,GAATA,SAAAA,CAAAA,SAAAA,CAAsCM,KAAK,CAH7C,SAG6C,CAHtC,CAAP,CAKD","sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\n\nclass AnimatedCond extends AnimatedNode {\n  _condition;\n  _ifBlock;\n  _elseBlock;\n\n  constructor(condition, ifBlock, elseBlock) {\n    invariant(\n      condition instanceof AnimatedNode,\n      `Reanimated: Animated.cond node first argument should be of type AnimatedNode but got ${condition}`\n    );\n    invariant(\n      ifBlock instanceof AnimatedNode,\n      `Reanimated: Animated.cond node second argument should be of type AnimatedNode but got ${ifBlock}`\n    );\n    invariant(\n      elseBlock instanceof AnimatedNode || elseBlock === undefined,\n      `Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got ${elseBlock}`\n    );\n    super(\n      {\n        type: 'cond',\n        cond: condition,\n        ifBlock,\n        elseBlock,\n      },\n      [condition, ifBlock, elseBlock]\n    );\n    this._condition = condition;\n    this._ifBlock = ifBlock;\n    this._elseBlock = elseBlock;\n  }\n\n  toString() {\n    return `AnimatedCond, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    if (val(this._condition)) {\n      return val(this._ifBlock);\n    } else {\n      return this._elseBlock !== undefined ? val(this._elseBlock) : undefined;\n    }\n  }\n}\n\nexport function createAnimatedCond(cond, ifBlock, elseBlock) {\n  return new AnimatedCond(\n    adapt(cond),\n    adapt(ifBlock),\n    elseBlock === undefined ? undefined : adapt(elseBlock)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}