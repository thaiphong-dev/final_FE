{"ast":null,"code":"import{cond,sub,pow,divide,multiply,add,block,set,lessThan,proc,abs}from\"../base\";var VELOCITY_EPS=5;function decay(clock,state,config){var lastTime=cond(state.time,state.time,clock);var deltaTime=sub(clock,lastTime);var kv=pow(config.deceleration,deltaTime);var kx=divide(multiply(config.deceleration,sub(1,kv)),sub(1,config.deceleration));var v0=divide(state.velocity,1000);var v=multiply(v0,kv,1000);var x=add(state.position,multiply(v0,kx));return block([set(state.position,x),set(state.velocity,v),set(state.time,clock),cond(lessThan(abs(v),VELOCITY_EPS),set(state.finished,1))]);}var procDecay=proc(function(clock,time,velocity,position,finished,deceleration){return decay(clock,{time:time,velocity:velocity,position:position,finished:finished},{deceleration:deceleration});});export default(function(clock,_ref,_ref2){var time=_ref.time,velocity=_ref.velocity,position=_ref.position,finished=_ref.finished;var deceleration=_ref2.deceleration;return procDecay(clock,time,velocity,position,finished,deceleration);});","map":{"version":3,"sources":["decay.js"],"names":["VELOCITY_EPS","lastTime","cond","state","deltaTime","sub","kv","pow","config","kx","divide","multiply","v0","v","x","add","block","set","lessThan","abs","procDecay","proc","decay","time","velocity","position","finished","deceleration"],"mappings":"AAAA,OAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,eAcA,GAAMA,CAAAA,YAAY,CAAlB,CAAA,CAEA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAqC,CACnC,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAAN,IAAA,CAAaA,KAAK,CAAlB,IAAA,CAArB,KAAqB,CAArB,CACA,GAAMC,CAAAA,SAAS,CAAGC,GAAG,CAAA,KAAA,CAFc,QAEd,CAArB,CAQA,GAAMC,CAAAA,EAAE,CAAGC,GAAG,CAACC,MAAM,CAAP,YAAA,CAAd,SAAc,CAAd,CACA,GAAMC,CAAAA,EAAE,CAAGC,MAAM,CACfC,QAAQ,CAACH,MAAM,CAAP,YAAA,CAAsBH,GAAG,CAAA,CAAA,CADlB,EACkB,CAAzB,CADO,CAEfA,GAAG,CAAA,CAAA,CAAIG,MAAM,CAFf,YAEK,CAFY,CAAjB,CAIA,GAAMI,CAAAA,EAAE,CAAGF,MAAM,CAACP,KAAK,CAAN,QAAA,CAAjB,IAAiB,CAAjB,CACA,GAAMU,CAAAA,CAAC,CAAGF,QAAQ,CAAA,EAAA,CAAA,EAAA,CAAlB,IAAkB,CAAlB,CACA,GAAMG,CAAAA,CAAC,CAAGC,GAAG,CAACZ,KAAK,CAAN,QAAA,CAAiBQ,QAAQ,CAAA,EAAA,CAAtC,EAAsC,CAAzB,CAAb,CACA,MAAOK,CAAAA,KAAK,CAAC,CACXC,GAAG,CAACd,KAAK,CAAN,QAAA,CADQ,CACR,CADQ,CAEXc,GAAG,CAACd,KAAK,CAAN,QAAA,CAFQ,CAER,CAFQ,CAGXc,GAAG,CAACd,KAAK,CAAN,IAAA,CAHQ,KAGR,CAHQ,CAIXD,IAAI,CAACgB,QAAQ,CAACC,GAAG,CAAJ,CAAI,CAAJ,CAAT,YAAS,CAAT,CAAiCF,GAAG,CAACd,KAAK,CAAN,QAAA,CAJ1C,CAI0C,CAApC,CAJO,CAAD,CAAZ,CAMD,CAED,GAAMiB,CAAAA,SAAS,CAAGC,IAAI,CACpB,SAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,YAAA,QACEC,CAAAA,KAAK,CAAA,KAAA,CAAQ,CAAEC,IAAF,CAAEA,IAAF,CAAQC,QAAR,CAAQA,QAAR,CAAkBC,QAAlB,CAAkBA,QAAlB,CAA4BC,QAAAA,CAAAA,QAA5B,CAAR,CAAgD,CAAEC,YAAAA,CAAAA,YAAF,CAAhD,CADP,EADoB,CAAtB,CAKA,eAAe,SAAA,KAAA,gBAEb,CAAA,IAFa,MAEb,IAFa,CAEb,QAFa,MAEb,QAFa,CAEb,QAFa,MAEb,QAFa,CAEeD,QAFf,MAEeA,QAFf,IAGXC,CAAAA,YAHW,OAGXA,YAHW,OAIVP,CAAAA,SAAS,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAJd,YAIc,CAJC,EAAf","sourcesContent":["import {\n  cond,\n  sub,\n  pow,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  lessThan,\n  proc,\n  abs,\n} from '../base';\n\nconst VELOCITY_EPS = 5;\n\nfunction decay(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const deltaTime = sub(clock, lastTime);\n\n  // v0 = v / 1000\n  // v = v0 * powf(deceleration, dt);\n  // v = v * 1000;\n\n  // x0 = x;\n  // x = x0 + v0 * deceleration * (1 - powf(deceleration, dt)) / (1 - deceleration)\n  const kv = pow(config.deceleration, deltaTime);\n  const kx = divide(\n    multiply(config.deceleration, sub(1, kv)),\n    sub(1, config.deceleration)\n  );\n  const v0 = divide(state.velocity, 1000);\n  const v = multiply(v0, kv, 1000);\n  const x = add(state.position, multiply(v0, kx));\n  return block([\n    set(state.position, x),\n    set(state.velocity, v),\n    set(state.time, clock),\n    cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1)),\n  ]);\n}\n\nconst procDecay = proc(\n  (clock, time, velocity, position, finished, deceleration) =>\n    decay(clock, { time, velocity, position, finished }, { deceleration })\n);\n\nexport default (\n  clock,\n  { time, velocity, position, finished },\n  { deceleration }\n) => procDecay(clock, time, velocity, position, finished, deceleration);\n"]},"metadata":{},"sourceType":"module"}