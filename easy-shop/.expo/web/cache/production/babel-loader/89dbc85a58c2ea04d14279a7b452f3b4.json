{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import PropTypes from'prop-types';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";import UIManager from\"react-native-web/dist/exports/UIManager\";import TextInput from\"react-native-web/dist/exports/TextInput\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import Animated from\"react-native-web/dist/exports/Animated\";import{isIphoneX}from'react-native-iphone-x-helper';var _KAM_DEFAULT_TAB_BAR_HEIGHT=isIphoneX()?83:49;var _KAM_KEYBOARD_OPENING_TIME=250;var _KAM_EXTRA_HEIGHT=75;var supportedKeyboardEvents=['keyboardWillShow','keyboardDidShow','keyboardWillHide','keyboardDidHide','keyboardWillChangeFrame','keyboardDidChangeFrame'];var keyboardEventToCallbackName=function keyboardEventToCallbackName(eventName){return'on'+eventName[0].toUpperCase()+eventName.substring(1);};var keyboardEventPropTypes=supportedKeyboardEvents.reduce(function(acc,eventName){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},keyboardEventToCallbackName(eventName),PropTypes.func));},{});var keyboardAwareHOCTypeEvents=supportedKeyboardEvents.reduce(function(acc,eventName){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},keyboardEventToCallbackName(eventName),Function));},{});function getDisplayName(WrappedComponent){return WrappedComponent&&(WrappedComponent.displayName||WrappedComponent.name)||'Component';}var ScrollIntoViewDefaultOptions={enableOnAndroid:false,contentContainerStyle:undefined,enableAutomaticScroll:true,extraHeight:_KAM_EXTRA_HEIGHT,extraScrollHeight:0,enableResetScrollToCoords:true,keyboardOpeningTime:_KAM_KEYBOARD_OPENING_TIME,viewIsInsideTabBar:false,refPropName:'ref',extractNativeRef:function extractNativeRef(ref){var shouldCallGetNode=!Platform.constants||Platform.constants.reactNativeVersion.major===0&&Platform.constants.reactNativeVersion.minor<62;if(ref.getNode&&shouldCallGetNode){return ref.getNode();}else{return ref;}}};function KeyboardAwareHOC(ScrollableComponent){var _class;var userOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var hocOptions=_objectSpread(_objectSpread({},ScrollIntoViewDefaultOptions),userOptions);return _class=function(_React$Component){_inherits(_class,_React$Component);var _super=_createSuper(_class);function _class(props){var _this;_classCallCheck(this,_class);_this=_super.call(this,props);_this.getScrollResponder=function(){return _this._rnkasv_keyboardView&&_this._rnkasv_keyboardView.getScrollResponder&&_this._rnkasv_keyboardView.getScrollResponder();};_this.scrollToPosition=function(x,y){var animated=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var responder=_this.getScrollResponder();if(!responder){return;}if(responder.scrollResponderScrollTo){responder.scrollResponderScrollTo({x:x,y:y,animated:animated});}else if(responder.scrollTo){responder.scrollTo({x:x,y:y,animated:animated});}};_this.scrollToEnd=function(){var animated=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var responder=_this.getScrollResponder();if(!responder){return;}if(responder.scrollResponderScrollToEnd){responder.scrollResponderScrollToEnd({animated:animated});}else if(responder.scrollToEnd){responder.scrollToEnd({animated:animated});}};_this.scrollForExtraHeightOnAndroid=function(extraHeight){_this.scrollToPosition(0,_this.position.y+extraHeight,true);};_this.scrollToFocusedInput=function(reactNode,extraHeight,keyboardOpeningTime){if(extraHeight===undefined){extraHeight=_this.props.extraHeight||0;}if(keyboardOpeningTime===undefined){keyboardOpeningTime=_this.props.keyboardOpeningTime||0;}setTimeout(function(){if(!_this.mountedComponent){return;}var responder=_this.getScrollResponder();responder&&responder.scrollResponderScrollNativeHandleToKeyboard(reactNode,extraHeight,true);},keyboardOpeningTime);};_this.scrollIntoView=function _callee(element){var options,_await$Promise$all,_await$Promise$all2,parentLayout,childLayout,getScrollPosition,_getScrollPosition,x,y,animated,_args=arguments;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};if(!(!_this._rnkasv_keyboardView||!element)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.next=5;return _regeneratorRuntime.awrap(Promise.all([_this._measureElement(_this._rnkasv_keyboardView),_this._measureElement(element)]));case 5:_await$Promise$all=_context.sent;_await$Promise$all2=_slicedToArray(_await$Promise$all,2);parentLayout=_await$Promise$all2[0];childLayout=_await$Promise$all2[1];getScrollPosition=options.getScrollPosition||_this._defaultGetScrollPosition;_getScrollPosition=getScrollPosition(parentLayout,childLayout,_this.position),x=_getScrollPosition.x,y=_getScrollPosition.y,animated=_getScrollPosition.animated;_this.scrollToPosition(x,y,animated);case 12:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this._defaultGetScrollPosition=function(parentLayout,childLayout,contentOffset){return{x:0,y:Math.max(0,childLayout.y-parentLayout.y+contentOffset.y),animated:true};};_this._measureElement=function(element){var node=findNodeHandle(element);return new Promise(function(resolve){UIManager.measureInWindow(node,function(x,y,width,height){resolve({x:x,y:y,width:width,height:height});});});};_this._updateKeyboardSpace=function(frames){if(_this.props.enableAutomaticScroll){var keyboardSpace=frames.endCoordinates.height+_this.props.extraScrollHeight;if(_this.props.viewIsInsideTabBar){keyboardSpace-=_KAM_DEFAULT_TAB_BAR_HEIGHT;}_this.setState({keyboardSpace:keyboardSpace});var currentlyFocusedField=TextInput.State.currentlyFocusedInput?findNodeHandle(TextInput.State.currentlyFocusedInput()):TextInput.State.currentlyFocusedField();var responder=_this.getScrollResponder();if(!currentlyFocusedField||!responder){return;}UIManager.viewIsDescendantOf(currentlyFocusedField,responder.getInnerViewNode(),function(isAncestor){if(isAncestor){UIManager.measureInWindow(currentlyFocusedField,function(x,y,width,height){var textInputBottomPosition=y+height;var keyboardPosition=frames.endCoordinates.screenY;var totalExtraHeight=_this.props.extraScrollHeight+_this.props.extraHeight;if(Platform.OS==='ios'){if(textInputBottomPosition>keyboardPosition-totalExtraHeight){_this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);}}else{if(textInputBottomPosition>keyboardPosition){keyboardSpace=keyboardSpace-(textInputBottomPosition-keyboardPosition);_this.setState({keyboardSpace:keyboardSpace});_this.scrollForExtraHeightOnAndroid(totalExtraHeight);}else if(textInputBottomPosition>keyboardPosition-totalExtraHeight){_this.scrollForExtraHeightOnAndroid(totalExtraHeight-(keyboardPosition-textInputBottomPosition));}}});}});}if(!_this.props.resetScrollToCoords){if(!_this.defaultResetScrollToCoords){_this.defaultResetScrollToCoords=_this.position;}}};_this._resetKeyboardSpace=function(){var keyboardSpace=_this.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;_this.setState({keyboardSpace:keyboardSpace});if(_this.props.enableResetScrollToCoords===false){_this.defaultResetScrollToCoords=null;return;}else if(_this.props.resetScrollToCoords){_this.scrollToPosition(_this.props.resetScrollToCoords.x,_this.props.resetScrollToCoords.y,true);}else{if(_this.defaultResetScrollToCoords){_this.scrollToPosition(_this.defaultResetScrollToCoords.x,_this.defaultResetScrollToCoords.y,true);_this.defaultResetScrollToCoords=null;}else{_this.scrollToPosition(0,0,true);}}};_this._scrollToFocusedInputWithNodeHandle=function(nodeID,extraHeight,keyboardOpeningTime){if(extraHeight===undefined){extraHeight=_this.props.extraHeight;}var reactNode=findNodeHandle(nodeID);_this.scrollToFocusedInput(reactNode,extraHeight+_this.props.extraScrollHeight,keyboardOpeningTime!==undefined?keyboardOpeningTime:_this.props.keyboardOpeningTime||0);};_this._handleOnScroll=function(e){_this.position=e.nativeEvent.contentOffset;};_this._handleRef=function(ref){_this._rnkasv_keyboardView=ref?hocOptions.extractNativeRef(ref):ref;if(_this.props.innerRef){_this.props.innerRef(_this._rnkasv_keyboardView);}};_this.update=function(){var currentlyFocusedField=TextInput.State.currentlyFocusedInput?findNodeHandle(TextInput.State.currentlyFocusedInput()):TextInput.State.currentlyFocusedField();var responder=_this.getScrollResponder();if(!currentlyFocusedField||!responder){return;}_this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField);};_this.keyboardWillShowEvent=undefined;_this.keyboardWillHideEvent=undefined;_this.callbacks={};_this.position={x:0,y:0};_this.defaultResetScrollToCoords=null;var _keyboardSpace=props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;_this.state={keyboardSpace:_keyboardSpace};return _this;}_createClass(_class,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.mountedComponent=true;if(Platform.OS==='ios'){this.keyboardWillShowEvent=Keyboard.addListener('keyboardWillShow',this._updateKeyboardSpace);this.keyboardWillHideEvent=Keyboard.addListener('keyboardWillHide',this._resetKeyboardSpace);}else if(Platform.OS==='android'&&this.props.enableOnAndroid){this.keyboardWillShowEvent=Keyboard.addListener('keyboardDidShow',this._updateKeyboardSpace);this.keyboardWillHideEvent=Keyboard.addListener('keyboardDidHide',this._resetKeyboardSpace);}supportedKeyboardEvents.forEach(function(eventName){var callbackName=keyboardEventToCallbackName(eventName);if(_this2.props[callbackName]){_this2.callbacks[eventName]=Keyboard.addListener(eventName,_this2.props[callbackName]);}});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.viewIsInsideTabBar!==prevProps.viewIsInsideTabBar){var keyboardSpace=this.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;if(this.state.keyboardSpace!==keyboardSpace){this.setState({keyboardSpace:keyboardSpace});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.mountedComponent=false;this.keyboardWillShowEvent&&this.keyboardWillShowEvent.remove();this.keyboardWillHideEvent&&this.keyboardWillHideEvent.remove();Object.values(this.callbacks).forEach(function(callback){return callback.remove();});}},{key:\"render\",value:function render(){var _this$props=this.props,enableOnAndroid=_this$props.enableOnAndroid,contentContainerStyle=_this$props.contentContainerStyle,onScroll=_this$props.onScroll;var newContentContainerStyle;if(Platform.OS==='android'&&enableOnAndroid){newContentContainerStyle=[].concat(contentContainerStyle).concat({paddingBottom:((contentContainerStyle||{}).paddingBottom||0)+this.state.keyboardSpace});}var refProps=_defineProperty({},hocOptions.refPropName,this._handleRef);return React.createElement(ScrollableComponent,_extends({},refProps,{keyboardDismissMode:\"interactive\",contentInset:{bottom:this.state.keyboardSpace},automaticallyAdjustContentInsets:false,showsVerticalScrollIndicator:true,scrollEventThrottle:1},this.props,{contentContainerStyle:newContentContainerStyle||contentContainerStyle,keyboardSpace:this.state.keyboardSpace,getScrollResponder:this.getScrollResponder,scrollToPosition:this.scrollToPosition,scrollToEnd:this.scrollToEnd,scrollForExtraHeightOnAndroid:this.scrollForExtraHeightOnAndroid,scrollToFocusedInput:this.scrollToFocusedInput,scrollIntoView:this.scrollIntoView,resetKeyboardSpace:this._resetKeyboardSpace,handleOnScroll:this._handleOnScroll,update:this.update,onScroll:Animated.forkEvent(onScroll,this._handleOnScroll)}));}}]);return _class;}(React.Component),_class.displayName=\"KeyboardAware\"+getDisplayName(ScrollableComponent),_class.propTypes=_objectSpread({viewIsInsideTabBar:PropTypes.bool,resetScrollToCoords:PropTypes.shape({x:PropTypes.number.isRequired,y:PropTypes.number.isRequired}),enableResetScrollToCoords:PropTypes.bool,enableAutomaticScroll:PropTypes.bool,extraHeight:PropTypes.number,extraScrollHeight:PropTypes.number,keyboardOpeningTime:PropTypes.number,onScroll:PropTypes.oneOfType([PropTypes.func,PropTypes.object]),update:PropTypes.func,contentContainerStyle:PropTypes.any,enableOnAndroid:PropTypes.bool,innerRef:PropTypes.func},keyboardEventPropTypes),_class.defaultProps={enableAutomaticScroll:hocOptions.enableAutomaticScroll,extraHeight:hocOptions.extraHeight,extraScrollHeight:hocOptions.extraScrollHeight,enableResetScrollToCoords:hocOptions.enableResetScrollToCoords,keyboardOpeningTime:hocOptions.keyboardOpeningTime,viewIsInsideTabBar:hocOptions.viewIsInsideTabBar,enableOnAndroid:hocOptions.enableOnAndroid},_class;}var listenToKeyboardEvents=function listenToKeyboardEvents(configOrComp){if(typeof configOrComp==='object'&&!configOrComp.displayName){return function(Comp){return KeyboardAwareHOC(Comp,configOrComp);};}else{return KeyboardAwareHOC(configOrComp);}};export default listenToKeyboardEvents;","map":{"version":3,"names":["React","PropTypes","isIphoneX","_KAM_DEFAULT_TAB_BAR_HEIGHT","_KAM_KEYBOARD_OPENING_TIME","_KAM_EXTRA_HEIGHT","supportedKeyboardEvents","keyboardEventToCallbackName","eventName","toUpperCase","substring","keyboardEventPropTypes","reduce","acc","func","keyboardAwareHOCTypeEvents","Function","getDisplayName","WrappedComponent","displayName","name","ScrollIntoViewDefaultOptions","enableOnAndroid","contentContainerStyle","undefined","enableAutomaticScroll","extraHeight","extraScrollHeight","enableResetScrollToCoords","keyboardOpeningTime","viewIsInsideTabBar","refPropName","extractNativeRef","ref","shouldCallGetNode","Platform","constants","reactNativeVersion","major","minor","getNode","KeyboardAwareHOC","ScrollableComponent","userOptions","hocOptions","props","getScrollResponder","_rnkasv_keyboardView","scrollToPosition","x","y","animated","responder","scrollResponderScrollTo","scrollTo","scrollToEnd","scrollResponderScrollToEnd","scrollForExtraHeightOnAndroid","position","scrollToFocusedInput","reactNode","setTimeout","mountedComponent","scrollResponderScrollNativeHandleToKeyboard","scrollIntoView","element","options","Promise","all","_measureElement","parentLayout","childLayout","getScrollPosition","_defaultGetScrollPosition","contentOffset","Math","max","node","findNodeHandle","resolve","UIManager","measureInWindow","width","height","_updateKeyboardSpace","frames","keyboardSpace","endCoordinates","setState","currentlyFocusedField","TextInput","State","currentlyFocusedInput","viewIsDescendantOf","getInnerViewNode","isAncestor","textInputBottomPosition","keyboardPosition","screenY","totalExtraHeight","OS","_scrollToFocusedInputWithNodeHandle","resetScrollToCoords","defaultResetScrollToCoords","_resetKeyboardSpace","nodeID","_handleOnScroll","e","nativeEvent","_handleRef","innerRef","update","keyboardWillShowEvent","keyboardWillHideEvent","callbacks","state","Keyboard","addListener","forEach","callbackName","prevProps","remove","Object","values","callback","onScroll","newContentContainerStyle","concat","paddingBottom","refProps","bottom","Animated","forkEvent","Component","propTypes","bool","shape","number","isRequired","oneOfType","object","any","defaultProps","listenToKeyboardEvents","configOrComp","Comp"],"sources":["D:/PTIT/do an nam 4/mobile/mern-stack-ecommerce-master/easy-shop/node_modules/react-native-keyboard-aware-scroll-view/lib/KeyboardAwareHOC.js"],"sourcesContent":["/* @flow */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Keyboard,\n  Platform,\n  UIManager,\n  TextInput,\n  findNodeHandle,\n  Animated\n} from 'react-native'\nimport { isIphoneX } from 'react-native-iphone-x-helper'\nimport type { KeyboardAwareInterface } from './KeyboardAwareInterface'\n\nconst _KAM_DEFAULT_TAB_BAR_HEIGHT: number = isIphoneX() ? 83 : 49\nconst _KAM_KEYBOARD_OPENING_TIME: number = 250\nconst _KAM_EXTRA_HEIGHT: number = 75\n\nconst supportedKeyboardEvents = [\n  'keyboardWillShow',\n  'keyboardDidShow',\n  'keyboardWillHide',\n  'keyboardDidHide',\n  'keyboardWillChangeFrame',\n  'keyboardDidChangeFrame'\n]\nconst keyboardEventToCallbackName = (eventName: string) =>\n  'on' + eventName[0].toUpperCase() + eventName.substring(1)\nconst keyboardEventPropTypes = supportedKeyboardEvents.reduce(\n  (acc: Object, eventName: string) => ({\n    ...acc,\n    [keyboardEventToCallbackName(eventName)]: PropTypes.func\n  }),\n  {}\n)\nconst keyboardAwareHOCTypeEvents = supportedKeyboardEvents.reduce(\n  (acc: Object, eventName: string) => ({\n    ...acc,\n    [keyboardEventToCallbackName(eventName)]: Function\n  }),\n  {}\n)\n\nexport type KeyboardAwareHOCProps = {\n  viewIsInsideTabBar?: boolean,\n  resetScrollToCoords?: {\n    x: number,\n    y: number\n  },\n  enableResetScrollToCoords?: boolean,\n  enableAutomaticScroll?: boolean,\n  extraHeight?: number,\n  extraScrollHeight?: number,\n  keyboardOpeningTime?: number,\n  onScroll?: Function,\n  update?: Function,\n  contentContainerStyle?: any,\n  enableOnAndroid?: boolean,\n  innerRef?: Function,\n  ...keyboardAwareHOCTypeEvents\n}\nexport type KeyboardAwareHOCState = {\n  keyboardSpace: number\n}\n\nexport type ElementLayout = {\n  x: number,\n  y: number,\n  width: number,\n  height: number\n}\n\nexport type ContentOffset = {\n  x: number,\n  y: number\n}\n\nexport type ScrollPosition = {\n  x: number,\n  y: number,\n  animated: boolean\n}\n\nexport type ScrollIntoViewOptions = ?{\n  getScrollPosition?: (\n    parentLayout: ElementLayout,\n    childLayout: ElementLayout,\n    contentOffset: ContentOffset\n  ) => ScrollPosition\n}\n\nexport type KeyboardAwareHOCOptions = ?{\n  enableOnAndroid: boolean,\n  contentContainerStyle: ?Object,\n  enableAutomaticScroll: boolean,\n  extraHeight: number,\n  extraScrollHeight: number,\n  enableResetScrollToCoords: boolean,\n  keyboardOpeningTime: number,\n  viewIsInsideTabBar: boolean,\n  refPropName: string,\n  extractNativeRef: Function\n}\n\nfunction getDisplayName(WrappedComponent: React$Component) {\n  return (\n    (WrappedComponent &&\n      (WrappedComponent.displayName || WrappedComponent.name)) ||\n    'Component'\n  )\n}\n\nconst ScrollIntoViewDefaultOptions: KeyboardAwareHOCOptions = {\n  enableOnAndroid: false,\n  contentContainerStyle: undefined,\n  enableAutomaticScroll: true,\n  extraHeight: _KAM_EXTRA_HEIGHT,\n  extraScrollHeight: 0,\n  enableResetScrollToCoords: true,\n  keyboardOpeningTime: _KAM_KEYBOARD_OPENING_TIME,\n  viewIsInsideTabBar: false,\n\n  // The ref prop name that will be passed to the wrapped component to obtain a ref\n  // If your ScrollView is already wrapped, maybe the wrapper permit to get a ref\n  // For example, with glamorous-native ScrollView, you should use \"innerRef\"\n  refPropName: 'ref',\n  // Sometimes the ref you get is a ref to a wrapped view (ex: Animated.ScrollView)\n  // We need access to the imperative API of a real native ScrollView so we need extraction logic\n  extractNativeRef: (ref: Object) => {\n    // getNode() permit to support Animated.ScrollView automatically, but is deprecated since RN 0.62\n    // see https://github.com/facebook/react-native/issues/19650\n    // see https://stackoverflow.com/questions/42051368/scrollto-is-undefined-on-animated-scrollview/48786374\n    // see https://github.com/facebook/react-native/commit/66e72bb4e00aafbcb9f450ed5db261d98f99f82a\n    const shouldCallGetNode = !Platform.constants || (Platform.constants.reactNativeVersion.major === 0 && Platform.constants.reactNativeVersion.minor < 62)\n    if (ref.getNode && shouldCallGetNode) {\n      return ref.getNode()\n    } else {\n      return ref\n    }\n  }\n}\n\nfunction KeyboardAwareHOC(\n  ScrollableComponent: React$Component,\n  userOptions: KeyboardAwareHOCOptions = {}\n) {\n  const hocOptions: KeyboardAwareHOCOptions = {\n    ...ScrollIntoViewDefaultOptions,\n    ...userOptions\n  }\n\n  return class\n    extends React.Component<KeyboardAwareHOCProps, KeyboardAwareHOCState>\n    implements KeyboardAwareInterface {\n    _rnkasv_keyboardView: any\n    keyboardWillShowEvent: ?Function\n    keyboardWillHideEvent: ?Function\n    position: ContentOffset\n    defaultResetScrollToCoords: ?{ x: number, y: number }\n    mountedComponent: boolean\n    handleOnScroll: Function\n    state: KeyboardAwareHOCState\n    static displayName = `KeyboardAware${getDisplayName(ScrollableComponent)}`\n\n    static propTypes = {\n      viewIsInsideTabBar: PropTypes.bool,\n      resetScrollToCoords: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      }),\n      enableResetScrollToCoords: PropTypes.bool,\n      enableAutomaticScroll: PropTypes.bool,\n      extraHeight: PropTypes.number,\n      extraScrollHeight: PropTypes.number,\n      keyboardOpeningTime: PropTypes.number,\n      onScroll: PropTypes.oneOfType([\n        PropTypes.func, // Normal listener\n        PropTypes.object // Animated.event listener\n      ]),\n      update: PropTypes.func,\n      contentContainerStyle: PropTypes.any,\n      enableOnAndroid: PropTypes.bool,\n      innerRef: PropTypes.func,\n      ...keyboardEventPropTypes\n    }\n\n    // HOC options are used to init default props, so that these options can be overriden with component props\n    static defaultProps = {\n      enableAutomaticScroll: hocOptions.enableAutomaticScroll,\n      extraHeight: hocOptions.extraHeight,\n      extraScrollHeight: hocOptions.extraScrollHeight,\n      enableResetScrollToCoords: hocOptions.enableResetScrollToCoords,\n      keyboardOpeningTime: hocOptions.keyboardOpeningTime,\n      viewIsInsideTabBar: hocOptions.viewIsInsideTabBar,\n      enableOnAndroid: hocOptions.enableOnAndroid\n    }\n\n    constructor(props: KeyboardAwareHOCProps) {\n      super(props)\n      this.keyboardWillShowEvent = undefined\n      this.keyboardWillHideEvent = undefined\n      this.callbacks = {}\n      this.position = { x: 0, y: 0 }\n      this.defaultResetScrollToCoords = null\n      const keyboardSpace: number = props.viewIsInsideTabBar\n        ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n        : 0\n      this.state = { keyboardSpace }\n    }\n\n    componentDidMount() {\n      this.mountedComponent = true\n      // Keyboard events\n      if (Platform.OS === 'ios') {\n        this.keyboardWillShowEvent = Keyboard.addListener(\n          'keyboardWillShow',\n          this._updateKeyboardSpace\n        )\n        this.keyboardWillHideEvent = Keyboard.addListener(\n          'keyboardWillHide',\n          this._resetKeyboardSpace\n        )\n      } else if (Platform.OS === 'android' && this.props.enableOnAndroid) {\n        this.keyboardWillShowEvent = Keyboard.addListener(\n          'keyboardDidShow',\n          this._updateKeyboardSpace\n        )\n        this.keyboardWillHideEvent = Keyboard.addListener(\n          'keyboardDidHide',\n          this._resetKeyboardSpace\n        )\n      }\n\n      supportedKeyboardEvents.forEach((eventName: string) => {\n        const callbackName = keyboardEventToCallbackName(eventName)\n        if (this.props[callbackName]) {\n          this.callbacks[eventName] = Keyboard.addListener(\n            eventName,\n            this.props[callbackName]\n          )\n        }\n      })\n    }\n\n    componentDidUpdate(prevProps: KeyboardAwareHOCProps) {\n      if (this.props.viewIsInsideTabBar !== prevProps.viewIsInsideTabBar) {\n        const keyboardSpace: number = this.props.viewIsInsideTabBar\n          ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n          : 0\n        if (this.state.keyboardSpace !== keyboardSpace) {\n          this.setState({ keyboardSpace })\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      this.mountedComponent = false\n      this.keyboardWillShowEvent && this.keyboardWillShowEvent.remove()\n      this.keyboardWillHideEvent && this.keyboardWillHideEvent.remove()\n      Object.values(this.callbacks).forEach((callback: Object) =>\n        callback.remove()\n      )\n    }\n\n    getScrollResponder = () => {\n      return (\n        this._rnkasv_keyboardView &&\n        this._rnkasv_keyboardView.getScrollResponder &&\n        this._rnkasv_keyboardView.getScrollResponder()\n      )\n    }\n\n    scrollToPosition = (x: number, y: number, animated: boolean = true) => {\n      const responder = this.getScrollResponder()\n      if (!responder) {\n        return\n      }\n      if (responder.scrollResponderScrollTo) {\n        // React Native < 0.65\n        responder.scrollResponderScrollTo({ x, y, animated })\n      } else if (responder.scrollTo) {\n        // React Native >= 0.65\n        responder.scrollTo({ x, y, animated })\n      }\n    }\n\n    scrollToEnd = (animated?: boolean = true) => {\n      const responder = this.getScrollResponder()\n      if (!responder) {\n        return\n      }\n      if (responder.scrollResponderScrollToEnd) {\n        // React Native < 0.65\n        responder.scrollResponderScrollToEnd({ animated })\n      } else if (responder.scrollToEnd) {\n        // React Native >= 0.65\n        responder.scrollToEnd({ animated })\n      }\n    }\n\n    scrollForExtraHeightOnAndroid = (extraHeight: number) => {\n      this.scrollToPosition(0, this.position.y + extraHeight, true)\n    }\n\n    /**\n     * @param keyboardOpeningTime: takes a different keyboardOpeningTime in consideration.\n     * @param extraHeight: takes an extra height in consideration.\n     */\n    scrollToFocusedInput = (\n      reactNode: any,\n      extraHeight?: number,\n      keyboardOpeningTime?: number\n    ) => {\n      if (extraHeight === undefined) {\n        extraHeight = this.props.extraHeight || 0\n      }\n      if (keyboardOpeningTime === undefined) {\n        keyboardOpeningTime = this.props.keyboardOpeningTime || 0\n      }\n      setTimeout(() => {\n        if (!this.mountedComponent) {\n          return\n        }\n        const responder = this.getScrollResponder()\n        responder &&\n          responder.scrollResponderScrollNativeHandleToKeyboard(\n            reactNode,\n            extraHeight,\n            true\n          )\n      }, keyboardOpeningTime)\n    }\n\n    scrollIntoView = async (\n      element: React.Element<*>,\n      options: ScrollIntoViewOptions = {}\n    ) => {\n      if (!this._rnkasv_keyboardView || !element) {\n        return\n      }\n\n      const [parentLayout, childLayout] = await Promise.all([\n        this._measureElement(this._rnkasv_keyboardView),\n        this._measureElement(element)\n      ])\n\n      const getScrollPosition =\n        options.getScrollPosition || this._defaultGetScrollPosition\n      const { x, y, animated } = getScrollPosition(\n        parentLayout,\n        childLayout,\n        this.position\n      )\n      this.scrollToPosition(x, y, animated)\n    }\n\n    _defaultGetScrollPosition = (\n      parentLayout: ElementLayout,\n      childLayout: ElementLayout,\n      contentOffset: ContentOffset\n    ): ScrollPosition => {\n      return {\n        x: 0,\n        y: Math.max(0, childLayout.y - parentLayout.y + contentOffset.y),\n        animated: true\n      }\n    }\n\n    _measureElement = (element: React.Element<*>): Promise<ElementLayout> => {\n      const node = findNodeHandle(element)\n      return new Promise((resolve: ElementLayout => void) => {\n        UIManager.measureInWindow(\n          node,\n          (x: number, y: number, width: number, height: number) => {\n            resolve({ x, y, width, height })\n          }\n        )\n      })\n    }\n\n    // Keyboard actions\n    _updateKeyboardSpace = (frames: Object) => {\n      // Automatically scroll to focused TextInput\n      if (this.props.enableAutomaticScroll) {\n        let keyboardSpace: number =\n          frames.endCoordinates.height + this.props.extraScrollHeight\n        if (this.props.viewIsInsideTabBar) {\n          keyboardSpace -= _KAM_DEFAULT_TAB_BAR_HEIGHT\n        }\n        this.setState({ keyboardSpace })\n        const currentlyFocusedField =  TextInput.State.currentlyFocusedInput ? findNodeHandle(TextInput.State.currentlyFocusedInput()) : TextInput.State.currentlyFocusedField()\n        const responder = this.getScrollResponder()\n        if (!currentlyFocusedField || !responder) {\n          return\n        }\n        UIManager.viewIsDescendantOf(\n          currentlyFocusedField,\n          responder.getInnerViewNode(),\n          (isAncestor: boolean) => {\n            if (isAncestor) {\n              // Check if the TextInput will be hidden by the keyboard\n              UIManager.measureInWindow(\n                currentlyFocusedField,\n                (x: number, y: number, width: number, height: number) => {\n                  const textInputBottomPosition = y + height\n                  const keyboardPosition = frames.endCoordinates.screenY\n                  const totalExtraHeight =\n                    this.props.extraScrollHeight + this.props.extraHeight\n                  if (Platform.OS === 'ios') {\n                    if (\n                      textInputBottomPosition >\n                      keyboardPosition - totalExtraHeight\n                    ) {\n                      this._scrollToFocusedInputWithNodeHandle(\n                        currentlyFocusedField\n                      )\n                    }\n                  } else {\n                    // On android, the system would scroll the text input just\n                    // above the keyboard so we just neet to scroll the extra\n                    // height part\n                    if (textInputBottomPosition > keyboardPosition) {\n                      // Since the system already scrolled the whole view up\n                      // we should reduce that amount\n                      keyboardSpace =\n                        keyboardSpace -\n                        (textInputBottomPosition - keyboardPosition)\n                      this.setState({ keyboardSpace })\n                      this.scrollForExtraHeightOnAndroid(totalExtraHeight)\n                    } else if (\n                      textInputBottomPosition >\n                      keyboardPosition - totalExtraHeight\n                    ) {\n                      this.scrollForExtraHeightOnAndroid(\n                        totalExtraHeight -\n                          (keyboardPosition - textInputBottomPosition)\n                      )\n                    }\n                  }\n                }\n              )\n            }\n          }\n        )\n      }\n      if (!this.props.resetScrollToCoords) {\n        if (!this.defaultResetScrollToCoords) {\n          this.defaultResetScrollToCoords = this.position\n        }\n      }\n    }\n\n    _resetKeyboardSpace = () => {\n      const keyboardSpace: number = this.props.viewIsInsideTabBar\n        ? _KAM_DEFAULT_TAB_BAR_HEIGHT\n        : 0\n      this.setState({ keyboardSpace })\n      // Reset scroll position after keyboard dismissal\n      if (this.props.enableResetScrollToCoords === false) {\n        this.defaultResetScrollToCoords = null\n        return\n      } else if (this.props.resetScrollToCoords) {\n        this.scrollToPosition(\n          this.props.resetScrollToCoords.x,\n          this.props.resetScrollToCoords.y,\n          true\n        )\n      } else {\n        if (this.defaultResetScrollToCoords) {\n          this.scrollToPosition(\n            this.defaultResetScrollToCoords.x,\n            this.defaultResetScrollToCoords.y,\n            true\n          )\n          this.defaultResetScrollToCoords = null\n        } else {\n          this.scrollToPosition(0, 0, true)\n        }\n      }\n    }\n\n    _scrollToFocusedInputWithNodeHandle = (\n      nodeID: number,\n      extraHeight?: number,\n      keyboardOpeningTime?: number\n    ) => {\n      if (extraHeight === undefined) {\n        extraHeight = this.props.extraHeight\n      }\n      const reactNode = findNodeHandle(nodeID)\n      this.scrollToFocusedInput(\n        reactNode,\n        extraHeight + this.props.extraScrollHeight,\n        keyboardOpeningTime !== undefined\n          ? keyboardOpeningTime\n          : this.props.keyboardOpeningTime || 0\n      )\n    }\n\n    _handleOnScroll = (\n      e: SyntheticEvent<*> & { nativeEvent: { contentOffset: number } }\n    ) => {\n      this.position = e.nativeEvent.contentOffset\n    }\n\n    _handleRef = (ref: React.Component<*>) => {\n      this._rnkasv_keyboardView = ref ? hocOptions.extractNativeRef(ref) : ref\n      if (this.props.innerRef) {\n        this.props.innerRef(this._rnkasv_keyboardView)\n      }\n    }\n\n    update = () => {\n      const currentlyFocusedField =  TextInput.State.currentlyFocusedInput ? findNodeHandle(TextInput.State.currentlyFocusedInput()) : TextInput.State.currentlyFocusedField()\n      const responder = this.getScrollResponder()\n\n      if (!currentlyFocusedField || !responder) {\n        return\n      }\n\n      this._scrollToFocusedInputWithNodeHandle(currentlyFocusedField)\n    }\n\n    render() {\n      const { enableOnAndroid, contentContainerStyle, onScroll } = this.props\n      let newContentContainerStyle\n      if (Platform.OS === 'android' && enableOnAndroid) {\n        newContentContainerStyle = [].concat(contentContainerStyle).concat({\n          paddingBottom:\n            ((contentContainerStyle || {}).paddingBottom || 0) +\n            this.state.keyboardSpace\n        })\n      }\n      const refProps = { [hocOptions.refPropName]: this._handleRef }\n      return (\n        <ScrollableComponent\n          {...refProps}\n          keyboardDismissMode='interactive'\n          contentInset={{ bottom: this.state.keyboardSpace }}\n          automaticallyAdjustContentInsets={false}\n          showsVerticalScrollIndicator={true}\n          scrollEventThrottle={1}\n          {...this.props}\n          contentContainerStyle={\n            newContentContainerStyle || contentContainerStyle\n          }\n          keyboardSpace={this.state.keyboardSpace}\n          getScrollResponder={this.getScrollResponder}\n          scrollToPosition={this.scrollToPosition}\n          scrollToEnd={this.scrollToEnd}\n          scrollForExtraHeightOnAndroid={this.scrollForExtraHeightOnAndroid}\n          scrollToFocusedInput={this.scrollToFocusedInput}\n          scrollIntoView={this.scrollIntoView}\n          resetKeyboardSpace={this._resetKeyboardSpace}\n          handleOnScroll={this._handleOnScroll}\n          update={this.update}\n          onScroll={Animated.forkEvent(onScroll, this._handleOnScroll)}\n        />\n      )\n    }\n  }\n}\n\n// Allow to pass options, without breaking change, and curried for composition\n// listenToKeyboardEvents(ScrollView);\n// listenToKeyboardEvents(options)(Comp);\nconst listenToKeyboardEvents = (configOrComp: any) => {\n  if (typeof configOrComp === 'object' && !configOrComp.displayName) {\n    return (Comp: Function) => KeyboardAwareHOC(Comp, configOrComp)\n  } else {\n    return KeyboardAwareHOC(configOrComp)\n  }\n}\n\nexport default listenToKeyboardEvents\n"],"mappings":"+/DAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,8XASA,OAASC,SAAT,KAA0B,8BAA1B,CAGA,GAAMC,CAAAA,2BAAmC,CAAGD,SAAS,GAAK,EAAL,CAAU,EAA/D,CACA,GAAME,CAAAA,0BAAkC,CAAG,GAA3C,CACA,GAAMC,CAAAA,iBAAyB,CAAG,EAAlC,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,CAC9B,kBAD8B,CAE9B,iBAF8B,CAG9B,kBAH8B,CAI9B,iBAJ8B,CAK9B,yBAL8B,CAM9B,wBAN8B,CAAhC,CAQA,GAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACC,SAAD,QAClC,KAAOA,SAAS,CAAC,CAAD,CAAT,CAAaC,WAAb,EAAP,CAAoCD,SAAS,CAACE,SAAV,CAAoB,CAApB,CADF,EAApC,CAEA,GAAMC,CAAAA,sBAAsB,CAAGL,uBAAuB,CAACM,MAAxB,CAC7B,SAACC,GAAD,CAAcL,SAAd,wCACKK,GADL,wBAEGN,2BAA2B,CAACC,SAAD,CAF9B,CAE4CP,SAAS,CAACa,IAFtD,IAD6B,CAK7B,EAL6B,CAA/B,CAOA,GAAMC,CAAAA,0BAA0B,CAAGT,uBAAuB,CAACM,MAAxB,CACjC,SAACC,GAAD,CAAcL,SAAd,wCACKK,GADL,wBAEGN,2BAA2B,CAACC,SAAD,CAF9B,CAE4CQ,QAF5C,IADiC,CAKjC,EALiC,CAAnC,CAqEA,QAASC,CAAAA,cAAT,CAAwBC,gBAAxB,CAA2D,CACzD,MACGA,CAAAA,gBAAgB,GACdA,gBAAgB,CAACC,WAAjB,EAAgCD,gBAAgB,CAACE,IADnC,CAAjB,EAEA,WAHF,CAKD,CAED,GAAMC,CAAAA,4BAAqD,CAAG,CAC5DC,eAAe,CAAE,KAD2C,CAE5DC,qBAAqB,CAAEC,SAFqC,CAG5DC,qBAAqB,CAAE,IAHqC,CAI5DC,WAAW,CAAErB,iBAJ+C,CAK5DsB,iBAAiB,CAAE,CALyC,CAM5DC,yBAAyB,CAAE,IANiC,CAO5DC,mBAAmB,CAAEzB,0BAPuC,CAQ5D0B,kBAAkB,CAAE,KARwC,CAa5DC,WAAW,CAAE,KAb+C,CAgB5DC,gBAAgB,CAAE,0BAACC,GAAD,CAAiB,CAKjC,GAAMC,CAAAA,iBAAiB,CAAG,CAACC,QAAQ,CAACC,SAAV,EAAwBD,QAAQ,CAACC,SAAT,CAAmBC,kBAAnB,CAAsCC,KAAtC,GAAgD,CAAhD,EAAqDH,QAAQ,CAACC,SAAT,CAAmBC,kBAAnB,CAAsCE,KAAtC,CAA8C,EAArJ,CACA,GAAIN,GAAG,CAACO,OAAJ,EAAeN,iBAAnB,CAAsC,CACpC,MAAOD,CAAAA,GAAG,CAACO,OAAJ,EAAP,CACD,CAFD,IAEO,CACL,MAAOP,CAAAA,GAAP,CACD,CACF,CA3B2D,CAA9D,CA8BA,QAASQ,CAAAA,gBAAT,CACEC,mBADF,CAGE,eADAC,CAAAA,WACA,2DADuC,EACvC,CACA,GAAMC,CAAAA,UAAmC,gCACpCvB,4BADoC,EAEpCsB,WAFoC,CAAzC,CAKA,4GA8CE,gBAAYE,KAAZ,CAA0C,wCACxC,uBAAMA,KAAN,EADwC,MAmE1CC,kBAnE0C,CAmErB,UAAM,CACzB,MACE,OAAKC,oBAAL,EACA,MAAKA,oBAAL,CAA0BD,kBAD1B,EAEA,MAAKC,oBAAL,CAA0BD,kBAA1B,EAHF,CAKD,CAzEyC,OA2E1CE,gBA3E0C,CA2EvB,SAACC,CAAD,CAAYC,CAAZ,CAAoD,IAA7BC,CAAAA,QAA6B,2DAAT,IAAS,CACrE,GAAMC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACA,GAAI,CAACM,SAAL,CAAgB,CACd,OACD,CACD,GAAIA,SAAS,CAACC,uBAAd,CAAuC,CAErCD,SAAS,CAACC,uBAAV,CAAkC,CAAEJ,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQC,QAAQ,CAARA,QAAR,CAAlC,EACD,CAHD,IAGO,IAAIC,SAAS,CAACE,QAAd,CAAwB,CAE7BF,SAAS,CAACE,QAAV,CAAmB,CAAEL,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQC,QAAQ,CAARA,QAAR,CAAnB,EACD,CACF,CAvFyC,OAyF1CI,WAzF0C,CAyF5B,UAA+B,IAA9BJ,CAAAA,QAA8B,2DAAT,IAAS,CAC3C,GAAMC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACA,GAAI,CAACM,SAAL,CAAgB,CACd,OACD,CACD,GAAIA,SAAS,CAACI,0BAAd,CAA0C,CAExCJ,SAAS,CAACI,0BAAV,CAAqC,CAAEL,QAAQ,CAARA,QAAF,CAArC,EACD,CAHD,IAGO,IAAIC,SAAS,CAACG,WAAd,CAA2B,CAEhCH,SAAS,CAACG,WAAV,CAAsB,CAAEJ,QAAQ,CAARA,QAAF,CAAtB,EACD,CACF,CArGyC,OAuG1CM,6BAvG0C,CAuGV,SAAC/B,WAAD,CAAyB,CACvD,MAAKsB,gBAAL,CAAsB,CAAtB,CAAyB,MAAKU,QAAL,CAAcR,CAAd,CAAkBxB,WAA3C,CAAwD,IAAxD,EACD,CAzGyC,OA+G1CiC,oBA/G0C,CA+GnB,SACrBC,SADqB,CAErBlC,WAFqB,CAGrBG,mBAHqB,CAIlB,CACH,GAAIH,WAAW,GAAKF,SAApB,CAA+B,CAC7BE,WAAW,CAAG,MAAKmB,KAAL,CAAWnB,WAAX,EAA0B,CAAxC,CACD,CACD,GAAIG,mBAAmB,GAAKL,SAA5B,CAAuC,CACrCK,mBAAmB,CAAG,MAAKgB,KAAL,CAAWhB,mBAAX,EAAkC,CAAxD,CACD,CACDgC,UAAU,CAAC,UAAM,CACf,GAAI,CAAC,MAAKC,gBAAV,CAA4B,CAC1B,OACD,CACD,GAAMV,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACAM,SAAS,EACPA,SAAS,CAACW,2CAAV,CACEH,SADF,CAEElC,WAFF,CAGE,IAHF,CADF,CAMD,CAXS,CAWPG,mBAXO,CAAV,CAYD,CAtIyC,OAwI1CmC,cAxI0C,CAwIzB,iBACfC,OADe,iQAEfC,OAFe,+CAEkB,EAFlB,MAIX,CAAC,MAAKnB,oBAAN,EAA8B,CAACkB,OAJpB,mHAQ2BE,OAAO,CAACC,GAAR,CAAY,CACpD,MAAKC,eAAL,CAAqB,MAAKtB,oBAA1B,CADoD,CAEpD,MAAKsB,eAAL,CAAqBJ,OAArB,CAFoD,CAAZ,CAR3B,mGAQRK,YARQ,wBAQMC,WARN,wBAaTC,iBAbS,CAcbN,OAAO,CAACM,iBAAR,EAA6B,MAAKC,yBAdrB,oBAeYD,iBAAiB,CAC1CF,YAD0C,CAE1CC,WAF0C,CAG1C,MAAKb,QAHqC,CAf7B,CAePT,CAfO,oBAePA,CAfO,CAeJC,CAfI,oBAeJA,CAfI,CAeDC,QAfC,oBAeDA,QAfC,CAoBf,MAAKH,gBAAL,CAAsBC,CAAtB,CAAyBC,CAAzB,CAA4BC,QAA5B,EApBe,sEAxIyB,OA+J1CsB,yBA/J0C,CA+Jd,SAC1BH,YAD0B,CAE1BC,WAF0B,CAG1BG,aAH0B,CAIP,CACnB,MAAO,CACLzB,CAAC,CAAE,CADE,CAELC,CAAC,CAAEyB,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYL,WAAW,CAACrB,CAAZ,CAAgBoB,YAAY,CAACpB,CAA7B,CAAiCwB,aAAa,CAACxB,CAA3D,CAFE,CAGLC,QAAQ,CAAE,IAHL,CAAP,CAKD,CAzKyC,OA2K1CkB,eA3K0C,CA2KxB,SAACJ,OAAD,CAAuD,CACvE,GAAMY,CAAAA,IAAI,CAAGC,cAAc,CAACb,OAAD,CAA3B,CACA,MAAO,IAAIE,CAAAA,OAAJ,CAAY,SAACY,OAAD,CAAoC,CACrDC,SAAS,CAACC,eAAV,CACEJ,IADF,CAEE,SAAC5B,CAAD,CAAYC,CAAZ,CAAuBgC,KAAvB,CAAsCC,MAAtC,CAAyD,CACvDJ,OAAO,CAAC,CAAE9B,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQgC,KAAK,CAALA,KAAR,CAAeC,MAAM,CAANA,MAAf,CAAD,CAAP,CACD,CAJH,EAMD,CAPM,CAAP,CAQD,CArLyC,OAwL1CC,oBAxL0C,CAwLnB,SAACC,MAAD,CAAoB,CAEzC,GAAI,MAAKxC,KAAL,CAAWpB,qBAAf,CAAsC,CACpC,GAAI6D,CAAAA,aAAqB,CACvBD,MAAM,CAACE,cAAP,CAAsBJ,MAAtB,CAA+B,MAAKtC,KAAL,CAAWlB,iBAD5C,CAEA,GAAI,MAAKkB,KAAL,CAAWf,kBAAf,CAAmC,CACjCwD,aAAa,EAAInF,2BAAjB,CACD,CACD,MAAKqF,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EACA,GAAMG,CAAAA,qBAAqB,CAAIC,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,CAAwCd,cAAc,CAACY,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAAD,CAAtD,CAAkGF,SAAS,CAACC,KAAV,CAAgBF,qBAAhB,EAAjI,CACA,GAAMrC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CACA,GAAI,CAAC2C,qBAAD,EAA0B,CAACrC,SAA/B,CAA0C,CACxC,OACD,CACD4B,SAAS,CAACa,kBAAV,CACEJ,qBADF,CAEErC,SAAS,CAAC0C,gBAAV,EAFF,CAGE,SAACC,UAAD,CAAyB,CACvB,GAAIA,UAAJ,CAAgB,CAEdf,SAAS,CAACC,eAAV,CACEQ,qBADF,CAEE,SAACxC,CAAD,CAAYC,CAAZ,CAAuBgC,KAAvB,CAAsCC,MAAtC,CAAyD,CACvD,GAAMa,CAAAA,uBAAuB,CAAG9C,CAAC,CAAGiC,MAApC,CACA,GAAMc,CAAAA,gBAAgB,CAAGZ,MAAM,CAACE,cAAP,CAAsBW,OAA/C,CACA,GAAMC,CAAAA,gBAAgB,CACpB,MAAKtD,KAAL,CAAWlB,iBAAX,CAA+B,MAAKkB,KAAL,CAAWnB,WAD5C,CAEA,GAAIS,QAAQ,CAACiE,EAAT,GAAgB,KAApB,CAA2B,CACzB,GACEJ,uBAAuB,CACvBC,gBAAgB,CAAGE,gBAFrB,CAGE,CACA,MAAKE,mCAAL,CACEZ,qBADF,EAGD,CACF,CATD,IASO,CAIL,GAAIO,uBAAuB,CAAGC,gBAA9B,CAAgD,CAG9CX,aAAa,CACXA,aAAa,EACZU,uBAAuB,CAAGC,gBADd,CADf,CAGA,MAAKT,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EACA,MAAK7B,6BAAL,CAAmC0C,gBAAnC,EACD,CARD,IAQO,IACLH,uBAAuB,CACvBC,gBAAgB,CAAGE,gBAFd,CAGL,CACA,MAAK1C,6BAAL,CACE0C,gBAAgB,EACbF,gBAAgB,CAAGD,uBADN,CADlB,EAID,CACF,CACF,CAtCH,EAwCD,CACF,CA/CH,EAiDD,CACD,GAAI,CAAC,MAAKnD,KAAL,CAAWyD,mBAAhB,CAAqC,CACnC,GAAI,CAAC,MAAKC,0BAAV,CAAsC,CACpC,MAAKA,0BAAL,CAAkC,MAAK7C,QAAvC,CACD,CACF,CACF,CA7PyC,OA+P1C8C,mBA/P0C,CA+PpB,UAAM,CAC1B,GAAMlB,CAAAA,aAAqB,CAAG,MAAKzC,KAAL,CAAWf,kBAAX,CAC1B3B,2BAD0B,CAE1B,CAFJ,CAGA,MAAKqF,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EAEA,GAAI,MAAKzC,KAAL,CAAWjB,yBAAX,GAAyC,KAA7C,CAAoD,CAClD,MAAK2E,0BAAL,CAAkC,IAAlC,CACA,OACD,CAHD,IAGO,IAAI,MAAK1D,KAAL,CAAWyD,mBAAf,CAAoC,CACzC,MAAKtD,gBAAL,CACE,MAAKH,KAAL,CAAWyD,mBAAX,CAA+BrD,CADjC,CAEE,MAAKJ,KAAL,CAAWyD,mBAAX,CAA+BpD,CAFjC,CAGE,IAHF,EAKD,CANM,IAMA,CACL,GAAI,MAAKqD,0BAAT,CAAqC,CACnC,MAAKvD,gBAAL,CACE,MAAKuD,0BAAL,CAAgCtD,CADlC,CAEE,MAAKsD,0BAAL,CAAgCrD,CAFlC,CAGE,IAHF,EAKA,MAAKqD,0BAAL,CAAkC,IAAlC,CACD,CAPD,IAOO,CACL,MAAKvD,gBAAL,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,IAA5B,EACD,CACF,CACF,CA1RyC,OA4R1CqD,mCA5R0C,CA4RJ,SACpCI,MADoC,CAEpC/E,WAFoC,CAGpCG,mBAHoC,CAIjC,CACH,GAAIH,WAAW,GAAKF,SAApB,CAA+B,CAC7BE,WAAW,CAAG,MAAKmB,KAAL,CAAWnB,WAAzB,CACD,CACD,GAAMkC,CAAAA,SAAS,CAAGkB,cAAc,CAAC2B,MAAD,CAAhC,CACA,MAAK9C,oBAAL,CACEC,SADF,CAEElC,WAAW,CAAG,MAAKmB,KAAL,CAAWlB,iBAF3B,CAGEE,mBAAmB,GAAKL,SAAxB,CACIK,mBADJ,CAEI,MAAKgB,KAAL,CAAWhB,mBAAX,EAAkC,CALxC,EAOD,CA5SyC,OA8S1C6E,eA9S0C,CA8SxB,SAChBC,CADgB,CAEb,CACH,MAAKjD,QAAL,CAAgBiD,CAAC,CAACC,WAAF,CAAclC,aAA9B,CACD,CAlTyC,OAoT1CmC,UApT0C,CAoT7B,SAAC5E,GAAD,CAA6B,CACxC,MAAKc,oBAAL,CAA4Bd,GAAG,CAAGW,UAAU,CAACZ,gBAAX,CAA4BC,GAA5B,CAAH,CAAsCA,GAArE,CACA,GAAI,MAAKY,KAAL,CAAWiE,QAAf,CAAyB,CACvB,MAAKjE,KAAL,CAAWiE,QAAX,CAAoB,MAAK/D,oBAAzB,EACD,CACF,CAzTyC,OA2T1CgE,MA3T0C,CA2TjC,UAAM,CACb,GAAMtB,CAAAA,qBAAqB,CAAIC,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,CAAwCd,cAAc,CAACY,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAAD,CAAtD,CAAkGF,SAAS,CAACC,KAAV,CAAgBF,qBAAhB,EAAjI,CACA,GAAMrC,CAAAA,SAAS,CAAG,MAAKN,kBAAL,EAAlB,CAEA,GAAI,CAAC2C,qBAAD,EAA0B,CAACrC,SAA/B,CAA0C,CACxC,OACD,CAED,MAAKiD,mCAAL,CAAyCZ,qBAAzC,EACD,CApUyC,CAExC,MAAKuB,qBAAL,CAA6BxF,SAA7B,CACA,MAAKyF,qBAAL,CAA6BzF,SAA7B,CACA,MAAK0F,SAAL,CAAiB,EAAjB,CACA,MAAKxD,QAAL,CAAgB,CAAET,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAhB,CACA,MAAKqD,0BAAL,CAAkC,IAAlC,CACA,GAAMjB,CAAAA,cAAqB,CAAGzC,KAAK,CAACf,kBAAN,CAC1B3B,2BAD0B,CAE1B,CAFJ,CAGA,MAAKgH,KAAL,CAAa,CAAE7B,aAAa,CAAbA,cAAF,CAAb,CAVwC,aAWzC,CAzDH,oDA2DE,4BAAoB,iBAClB,KAAKxB,gBAAL,CAAwB,IAAxB,CAEA,GAAI3B,QAAQ,CAACiE,EAAT,GAAgB,KAApB,CAA2B,CACzB,KAAKY,qBAAL,CAA6BI,QAAQ,CAACC,WAAT,CAC3B,kBAD2B,CAE3B,KAAKjC,oBAFsB,CAA7B,CAIA,KAAK6B,qBAAL,CAA6BG,QAAQ,CAACC,WAAT,CAC3B,kBAD2B,CAE3B,KAAKb,mBAFsB,CAA7B,CAID,CATD,IASO,IAAIrE,QAAQ,CAACiE,EAAT,GAAgB,SAAhB,EAA6B,KAAKvD,KAAL,CAAWvB,eAA5C,CAA6D,CAClE,KAAK0F,qBAAL,CAA6BI,QAAQ,CAACC,WAAT,CAC3B,iBAD2B,CAE3B,KAAKjC,oBAFsB,CAA7B,CAIA,KAAK6B,qBAAL,CAA6BG,QAAQ,CAACC,WAAT,CAC3B,iBAD2B,CAE3B,KAAKb,mBAFsB,CAA7B,CAID,CAEDlG,uBAAuB,CAACgH,OAAxB,CAAgC,SAAC9G,SAAD,CAAuB,CACrD,GAAM+G,CAAAA,YAAY,CAAGhH,2BAA2B,CAACC,SAAD,CAAhD,CACA,GAAI,MAAI,CAACqC,KAAL,CAAW0E,YAAX,CAAJ,CAA8B,CAC5B,MAAI,CAACL,SAAL,CAAe1G,SAAf,EAA4B4G,QAAQ,CAACC,WAAT,CAC1B7G,SAD0B,CAE1B,MAAI,CAACqC,KAAL,CAAW0E,YAAX,CAF0B,CAA5B,CAID,CACF,CARD,EASD,CA3FH,kCA6FE,4BAAmBC,SAAnB,CAAqD,CACnD,GAAI,KAAK3E,KAAL,CAAWf,kBAAX,GAAkC0F,SAAS,CAAC1F,kBAAhD,CAAoE,CAClE,GAAMwD,CAAAA,aAAqB,CAAG,KAAKzC,KAAL,CAAWf,kBAAX,CAC1B3B,2BAD0B,CAE1B,CAFJ,CAGA,GAAI,KAAKgH,KAAL,CAAW7B,aAAX,GAA6BA,aAAjC,CAAgD,CAC9C,KAAKE,QAAL,CAAc,CAAEF,aAAa,CAAbA,aAAF,CAAd,EACD,CACF,CACF,CAtGH,oCAwGE,+BAAuB,CACrB,KAAKxB,gBAAL,CAAwB,KAAxB,CACA,KAAKkD,qBAAL,EAA8B,KAAKA,qBAAL,CAA2BS,MAA3B,EAA9B,CACA,KAAKR,qBAAL,EAA8B,KAAKA,qBAAL,CAA2BQ,MAA3B,EAA9B,CACAC,MAAM,CAACC,MAAP,CAAc,KAAKT,SAAnB,EAA8BI,OAA9B,CAAsC,SAACM,QAAD,QACpCA,CAAAA,QAAQ,CAACH,MAAT,EADoC,EAAtC,EAGD,CA/GH,sBAoXE,iBAAS,CACP,gBAA6D,KAAK5E,KAAlE,CAAQvB,eAAR,aAAQA,eAAR,CAAyBC,qBAAzB,aAAyBA,qBAAzB,CAAgDsG,QAAhD,aAAgDA,QAAhD,CACA,GAAIC,CAAAA,wBAAJ,CACA,GAAI3F,QAAQ,CAACiE,EAAT,GAAgB,SAAhB,EAA6B9E,eAAjC,CAAkD,CAChDwG,wBAAwB,CAAG,GAAGC,MAAH,CAAUxG,qBAAV,EAAiCwG,MAAjC,CAAwC,CACjEC,aAAa,CACX,CAAC,CAACzG,qBAAqB,EAAI,EAA1B,EAA8ByG,aAA9B,EAA+C,CAAhD,EACA,KAAKb,KAAL,CAAW7B,aAHoD,CAAxC,CAA3B,CAKD,CACD,GAAM2C,CAAAA,QAAQ,oBAAMrF,UAAU,CAACb,WAAjB,CAA+B,KAAK8E,UAApC,CAAd,CACA,MACE,qBAAC,mBAAD,aACMoB,QADN,EAEE,mBAAmB,CAAC,aAFtB,CAGE,YAAY,CAAE,CAAEC,MAAM,CAAE,KAAKf,KAAL,CAAW7B,aAArB,CAHhB,CAIE,gCAAgC,CAAE,KAJpC,CAKE,4BAA4B,CAAE,IALhC,CAME,mBAAmB,CAAE,CANvB,EAOM,KAAKzC,KAPX,EAQE,qBAAqB,CACnBiF,wBAAwB,EAAIvG,qBAThC,CAWE,aAAa,CAAE,KAAK4F,KAAL,CAAW7B,aAX5B,CAYE,kBAAkB,CAAE,KAAKxC,kBAZ3B,CAaE,gBAAgB,CAAE,KAAKE,gBAbzB,CAcE,WAAW,CAAE,KAAKO,WAdpB,CAeE,6BAA6B,CAAE,KAAKE,6BAftC,CAgBE,oBAAoB,CAAE,KAAKE,oBAhB7B,CAiBE,cAAc,CAAE,KAAKK,cAjBvB,CAkBE,kBAAkB,CAAE,KAAKwC,mBAlB3B,CAmBE,cAAc,CAAE,KAAKE,eAnBvB,CAoBE,MAAM,CAAE,KAAKK,MApBf,CAqBE,QAAQ,CAAEoB,QAAQ,CAACC,SAAT,CAAmBP,QAAnB,CAA6B,KAAKnB,eAAlC,CArBZ,GADF,CAyBD,CAxZH,oBACU1G,KAAK,CAACqI,SADhB,SAWSlH,WAXT,iBAWuCF,cAAc,CAACyB,mBAAD,CAXrD,QAaS4F,SAbT,gBAcIxG,kBAAkB,CAAE7B,SAAS,CAACsI,IAdlC,CAeIjC,mBAAmB,CAAErG,SAAS,CAACuI,KAAV,CAAgB,CACnCvF,CAAC,CAAEhD,SAAS,CAACwI,MAAV,CAAiBC,UADe,CAEnCxF,CAAC,CAAEjD,SAAS,CAACwI,MAAV,CAAiBC,UAFe,CAAhB,CAfzB,CAmBI9G,yBAAyB,CAAE3B,SAAS,CAACsI,IAnBzC,CAoBI9G,qBAAqB,CAAExB,SAAS,CAACsI,IApBrC,CAqBI7G,WAAW,CAAEzB,SAAS,CAACwI,MArB3B,CAsBI9G,iBAAiB,CAAE1B,SAAS,CAACwI,MAtBjC,CAuBI5G,mBAAmB,CAAE5B,SAAS,CAACwI,MAvBnC,CAwBIZ,QAAQ,CAAE5H,SAAS,CAAC0I,SAAV,CAAoB,CAC5B1I,SAAS,CAACa,IADkB,CAE5Bb,SAAS,CAAC2I,MAFkB,CAApB,CAxBd,CA4BI7B,MAAM,CAAE9G,SAAS,CAACa,IA5BtB,CA6BIS,qBAAqB,CAAEtB,SAAS,CAAC4I,GA7BrC,CA8BIvH,eAAe,CAAErB,SAAS,CAACsI,IA9B/B,CA+BIzB,QAAQ,CAAE7G,SAAS,CAACa,IA/BxB,EAgCOH,sBAhCP,SAoCSmI,YApCT,CAoCwB,CACpBrH,qBAAqB,CAAEmB,UAAU,CAACnB,qBADd,CAEpBC,WAAW,CAAEkB,UAAU,CAAClB,WAFJ,CAGpBC,iBAAiB,CAAEiB,UAAU,CAACjB,iBAHV,CAIpBC,yBAAyB,CAAEgB,UAAU,CAAChB,yBAJlB,CAKpBC,mBAAmB,CAAEe,UAAU,CAACf,mBALZ,CAMpBC,kBAAkB,CAAEc,UAAU,CAACd,kBANX,CAOpBR,eAAe,CAAEsB,UAAU,CAACtB,eAPR,CApCxB,QA0ZD,CAKD,GAAMyH,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,YAAD,CAAuB,CACpD,GAAI,MAAOA,CAAAA,YAAP,GAAwB,QAAxB,EAAoC,CAACA,YAAY,CAAC7H,WAAtD,CAAmE,CACjE,MAAO,UAAC8H,IAAD,QAAoBxG,CAAAA,gBAAgB,CAACwG,IAAD,CAAOD,YAAP,CAApC,EAAP,CACD,CAFD,IAEO,CACL,MAAOvG,CAAAA,gBAAgB,CAACuG,YAAD,CAAvB,CACD,CACF,CAND,CAQA,cAAeD,CAAAA,sBAAf"},"metadata":{},"sourceType":"module"}