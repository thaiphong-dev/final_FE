{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import ReanimatedModule from\"../ReanimatedModule\";import Platform from\"react-native-web/dist/exports/Platform\";var UPDATED_NODES=[];var loopID=1;var propUpdatesEnqueued=null;var nodeCount=0;var callID=\"\";export function getCallID(){return callID;}export function setCallID(nextCallID){callID=nextCallID;}function sanitizeConfig(config){if(Platform.OS==='web'||Platform.OS==='windows'||Platform.OS==='macos'||['undefined','string','function','boolean','number'].includes(typeof config)){return config;}else if(Array.isArray(config)){return config.map(sanitizeConfig);}else if(config instanceof AnimatedNode){return config.__nodeID;}else if(typeof config==='object'){var output={};for(var property in config){if(property in config){output[property]=sanitizeConfig(config[property]);}}return output;}return config;}function runPropUpdates(){var visitedNodes=new Set();var findAndUpdateNodes=function findAndUpdateNodes(node){if(!node){console.warn('findAndUpdateNodes was passed a nullish node');return;}if(visitedNodes.has(node)){return;}else{visitedNodes.add(node);}if(typeof node.update==='function'){node.update();}else{var nodes=node.__getChildren();if(nodes){for(var i=0,l=nodes.length;i<l;i++){findAndUpdateNodes(nodes[i]);}}}};for(var i=0;i<UPDATED_NODES.length;i++){var node=UPDATED_NODES[i];findAndUpdateNodes(node);}UPDATED_NODES.length=0;propUpdatesEnqueued=null;loopID+=1;}var scheduleUpdates=Platform.OS==='web'?requestAnimationFrame:setImmediate;var AnimatedNode=function(){function AnimatedNode(nodeConfig,inputNodes){_classCallCheck(this,AnimatedNode);_defineProperty(this,\"__nodeID\",void 0);_defineProperty(this,\"__lastLoopID\",{\"\":-1});_defineProperty(this,\"__memoizedValue\",{\"\":null});_defineProperty(this,\"__children\",[]);this.__nodeID=++nodeCount;this.__nodeConfig=sanitizeConfig(nodeConfig);this.__initialized=false;this.__inputNodes=inputNodes&&inputNodes.filter(function(node){return node instanceof AnimatedNode;});}_createClass(AnimatedNode,[{key:\"toString\",value:function toString(){return\"AnimatedNode, id: \".concat(this.__nodeID);}},{key:\"__attach\",value:function __attach(){this.__nativeInitialize();var nodes=this.__inputNodes;if(nodes){for(var i=0,l=nodes.length;i<l;i++){nodes[i].__addChild(this);}}}},{key:\"__detach\",value:function __detach(){var nodes=this.__inputNodes;if(nodes){for(var i=0,l=nodes.length;i<l;i++){nodes[i].__removeChild(this);}}this.__nativeTearDown();}},{key:\"__getValue\",value:function __getValue(){if(!(callID in this.__lastLoopID)||this.__lastLoopID[callID]<loopID){this.__lastLoopID[callID]=loopID;var result=this.__onEvaluate();this.__memoizedValue[callID]=result;return result;}return this.__memoizedValue[callID];}},{key:\"__forceUpdateCache\",value:function __forceUpdateCache(newValue){this.__memoizedValue[callID]=newValue;this.__markUpdated();}},{key:\"__dangerouslyRescheduleEvaluate\",value:function __dangerouslyRescheduleEvaluate(){this.__lastLoopID[callID]=-1;this.__markUpdated();}},{key:\"__markUpdated\",value:function __markUpdated(){UPDATED_NODES.push(this);if(!propUpdatesEnqueued){propUpdatesEnqueued=scheduleUpdates(runPropUpdates);}}},{key:\"__nativeInitialize\",value:function __nativeInitialize(){if(!this.__initialized){ReanimatedModule.createNode(this.__nodeID,_objectSpread({},this.__nodeConfig));this.__initialized=true;}}},{key:\"__nativeTearDown\",value:function __nativeTearDown(){if(this.__initialized){ReanimatedModule.dropNode(this.__nodeID);this.__initialized=false;}}},{key:\"isNativelyInitialized\",value:function isNativelyInitialized(){return this.__initialized;}},{key:\"__onEvaluate\",value:function __onEvaluate(){throw new Error('Missing implementation of onEvaluate');}},{key:\"__getProps\",value:function __getProps(){return this.__getValue();}},{key:\"__getChildren\",value:function __getChildren(){return this.__children;}},{key:\"__addChild\",value:function __addChild(child){if(this.__children.length===0){this.__attach();}this.__children.push(child);child.__nativeInitialize();if(ReanimatedModule.connectNodes){ReanimatedModule.connectNodes(this.__nodeID,child.__nodeID);}else{child.__dangerouslyRescheduleEvaluate();}}},{key:\"__removeChild\",value:function __removeChild(child){var index=this.__children.indexOf(child);if(index===-1){console.warn(\"Trying to remove a child that doesn't exist\");return;}if(ReanimatedModule.disconnectNodes){ReanimatedModule.disconnectNodes(this.__nodeID,child.__nodeID);}this.__children.splice(index,1);if(this.__children.length===0){this.__detach();}}},{key:\"_connectAnimatedView\",value:function _connectAnimatedView(nativeViewTag){if(ReanimatedModule.connectNodeToView){ReanimatedModule.connectNodeToView(this.__nodeID,nativeViewTag);}else{this.__dangerouslyRescheduleEvaluate();}}},{key:\"_disconnectAnimatedView\",value:function _disconnectAnimatedView(nativeViewTag){ReanimatedModule.disconnectNodeFromView(this.__nodeID,nativeViewTag);}}]);return AnimatedNode;}();export{AnimatedNode as default};","map":{"version":3,"sources":["AnimatedNode.js"],"names":["UPDATED_NODES","loopID","propUpdatesEnqueued","nodeCount","callID","Platform","Array","config","output","property","sanitizeConfig","visitedNodes","findAndUpdateNodes","node","console","nodes","i","l","scheduleUpdates","constructor","inputNodes","toString","__attach","__detach","__getValue","result","__forceUpdateCache","__dangerouslyRescheduleEvaluate","__markUpdated","__nativeInitialize","ReanimatedModule","__nativeTearDown","isNativelyInitialized","__onEvaluate","__getProps","__getChildren","__addChild","child","__removeChild","index","_connectAnimatedView","_disconnectAnimatedView"],"mappings":"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","sourcesContent":["import ReanimatedModule from '../ReanimatedModule';\nimport { Platform } from 'react-native';\n\nconst UPDATED_NODES = [];\n\nlet loopID = 1;\nlet propUpdatesEnqueued = null;\nlet nodeCount = 0;\nlet callID = \"\";\n\nexport function getCallID() {\n  return callID;\n}\n\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    const output = {};\n    for (const property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n    return output;\n  }\n  // unhandled\n  return config;\n}\n\nfunction runPropUpdates() {\n  const visitedNodes = new Set();\n  const findAndUpdateNodes = node => {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      const nodes = node.__getChildren();\n      if (nodes) {\n        for (let i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n  for (let i = 0; i < UPDATED_NODES.length; i++) {\n    const node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n  UPDATED_NODES.length = 0; // clear array\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nconst scheduleUpdates =\n  Platform.OS === 'web' ? requestAnimationFrame : setImmediate;\n\nexport default class AnimatedNode {\n\n  __nodeID;\n  __lastLoopID = { \"\": -1 };\n  __memoizedValue = { \"\": null };\n  __children = [];\n\n  constructor(nodeConfig, inputNodes) {\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes =\n      inputNodes && inputNodes.filter(node => node instanceof AnimatedNode);\n  }\n\n  toString() {\n    return `AnimatedNode, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    this.__nativeInitialize();\n\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__removeChild(this);\n      }\n    }\n\n    this.__nativeTearDown();\n  }\n\n  __getValue() {\n    if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n      this.__lastLoopID[callID] = loopID;\n      const result = this.__onEvaluate();\n      this.__memoizedValue[callID] = result;\n      return result;\n    }\n    return this.__memoizedValue[callID];\n  }\n\n  __forceUpdateCache(newValue) {\n    this.__memoizedValue[callID] = newValue;\n    this.__markUpdated();\n  }\n\n  __dangerouslyRescheduleEvaluate() {\n    this.__lastLoopID[callID] = -1;\n    this.__markUpdated();\n  }\n\n  __markUpdated() {\n    UPDATED_NODES.push(this);\n    if (!propUpdatesEnqueued) {\n      propUpdatesEnqueued = scheduleUpdates(runPropUpdates);\n    }\n  }\n\n  __nativeInitialize() {\n    if (!this.__initialized) {\n      ReanimatedModule.createNode(this.__nodeID, { ...this.__nodeConfig });\n      this.__initialized = true;\n    }\n  }\n\n  __nativeTearDown() {\n    if (this.__initialized) {\n      ReanimatedModule.dropNode(this.__nodeID);\n      this.__initialized = false;\n    }\n  }\n\n  isNativelyInitialized() {\n    return this.__initialized;\n  }\n\n  __onEvaluate() {\n    throw new Error('Missing implementation of onEvaluate');\n  }\n\n  __getProps() {\n    return this.__getValue();\n  }\n\n  __getChildren() {\n    return this.__children;\n  }\n\n  __addChild(child) {\n    if (this.__children.length === 0) {\n      this.__attach();\n    }\n    this.__children.push(child);\n    child.__nativeInitialize();\n\n    if (ReanimatedModule.connectNodes) {\n      ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n    } else {\n      child.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  __removeChild(child) {\n    const index = this.__children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (ReanimatedModule.disconnectNodes) {\n      ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n    }\n\n    this.__children.splice(index, 1);\n    if (this.__children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  _connectAnimatedView(nativeViewTag) {\n    if (ReanimatedModule.connectNodeToView) {\n      ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n    } else {\n      this.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  _disconnectAnimatedView(nativeViewTag) {\n    ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}