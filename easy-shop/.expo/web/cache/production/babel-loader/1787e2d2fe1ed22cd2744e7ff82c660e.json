{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import AnimatedNode,{getCallID,setCallID}from\"./AnimatedNode\";import{adapt}from\"./AnimatedBlock\";import{val}from\"../val\";import invariant from'fbjs/lib/invariant';var AnimatedCallFunc=function(_AnimatedNode){_inherits(AnimatedCallFunc,_AnimatedNode);var _super=_createSuper(AnimatedCallFunc);function AnimatedCallFunc(what,args,params){var _this;_classCallCheck(this,AnimatedCallFunc);invariant(what instanceof AnimatedNode,\"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \".concat(what));invariant(args.every(function(el){return el instanceof AnimatedNode;}),\"Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got \".concat(args));invariant(params.every(function(el){return el instanceof AnimatedNode;}),\"Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got \".concat(params));_this=_super.call(this,{type:'callfunc',what:what,args:args,params:params},_toConsumableArray(args));_defineProperty(_assertThisInitialized(_this),\"_previousCallID\",void 0);_defineProperty(_assertThisInitialized(_this),\"_what\",void 0);_defineProperty(_assertThisInitialized(_this),\"_args\",void 0);_defineProperty(_assertThisInitialized(_this),\"_params\",void 0);_this._what=what;_this._args=args;_this._params=params;return _this;}_createClass(AnimatedCallFunc,[{key:\"toString\",value:function toString(){return\"AnimatedCallFunc, id: \".concat(this.__nodeID);}},{key:\"beginContext\",value:function beginContext(){var _this2=this;this._previousCallID=getCallID();setCallID(getCallID()+'/'+this.__nodeID);this._params.forEach(function(param,index){param.beginContext(_this2._args[index],_this2._previousCallID);});}},{key:\"endContext\",value:function endContext(){this._params.forEach(function(param,index){param.endContext();});setCallID(this._previousCallID);}},{key:\"__onEvaluate\",value:function __onEvaluate(){this.beginContext();var value=val(this._what);this.endContext();return value;}}]);return AnimatedCallFunc;}(AnimatedNode);export function createAnimatedCallFunc(proc,args,params){return new AnimatedCallFunc(proc,args.map(function(p){return adapt(p);}),params);}","map":{"version":3,"sources":["AnimatedCallFunc.js"],"names":["constructor","invariant","what","args","el","params","type","toString","beginContext","getCallID","setCallID","param","endContext","__onEvaluate","value","val","p","adapt"],"mappings":"q1CAAA,MAAA,CAAA,YAAA,EAAA,SAAA,CAAA,SAAA,sBACA,OAAA,KAAA,uBACA,OAAA,GAAA,cACA,MAAA,CAAA,SAAA,KAAA,oBAAA,C,GAEA,CAAA,gB,6GAKEA,0BAAW,IAAXA,CAAW,IAAXA,CAAW,MAAXA,CAAgC,kDAC9BC,SAAS,CACPC,IAAI,WADG,CAAA,YAAA,CAAA,uFAAA,MAAA,CAATD,IAAS,CAAA,CAATA,CAIAA,SAAS,CACPE,IAAI,CAAJA,KAAAA,CAAWC,SAAAA,EAAE,QAAIA,CAAAA,EAAE,WADZ,CAAA,YACM,EAAbD,CADO,CAAA,6FAAA,MAAA,CAATF,IAAS,CAAA,CAATA,CAIAA,SAAS,CACPI,MAAM,CAANA,KAAAA,CAAaD,SAAAA,EAAE,QAAIA,CAAAA,EAAE,WADd,CAAA,YACQ,EAAfC,CADO,CAAA,+FAAA,MAAA,CAATJ,MAAS,CAAA,CAATA,CAIA,uBACE,CACEK,IAAI,CADN,UAAA,CAEEJ,IAFF,CAEEA,IAFF,CAGEC,IAHF,CAGEA,IAHF,CAIEE,MAAAA,CAAAA,MAJF,CADF,oBAAA,IAAA,GAb8B,eAAA,+BAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,+BAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,+BAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,+BAAA,SAAA,CAAA,IAAA,EAAA,CAAA,CAsB9B,MAAA,KAAA,CAAA,IAAA,CACA,MAAA,KAAA,CAAA,IAAA,CACA,MAAA,OAAA,CAAA,MAAA,CAxB8B,aAyB/B,C,qDAEDE,mBAAW,CACT,MAAA,yBAAA,MAAA,CAAgC,KAAhC,QAAA,CAAA,CACD,C,4BAEDC,uBAAe,iBACb,KAAA,eAAA,CAAuBC,SAAvB,EAAA,CACAC,SAAS,CAACD,SAAS,GAATA,GAAAA,CAAoB,KAA9BC,QAAS,CAATA,CAEA,KAAA,OAAA,CAAA,OAAA,CAAqB,SAAA,KAAA,CAAA,KAAA,CAAkB,CACrCC,KAAK,CAALA,YAAAA,CAAmB,MAAA,CAAA,KAAA,CAAnBA,KAAmB,CAAnBA,CAAsC,MAAA,CAAtCA,eAAAA,EADF,CAAA,EAGD,C,0BAEDC,qBAAa,CACX,KAAA,OAAA,CAAA,OAAA,CAAqB,SAAA,KAAA,CAAA,KAAA,CAAkB,CACrCD,KAAK,CAALA,UAAAA,GADF,CAAA,EAGAD,SAAS,CAAC,KAAVA,eAAS,CAATA,CACD,C,4BAEDG,uBAAe,CACb,KAAA,YAAA,GACA,GAAMC,CAAAA,KAAK,CAAGC,GAAG,CAAC,KAAlB,KAAiB,CAAjB,CACA,KAAA,UAAA,GACA,MAAA,CAAA,KAAA,CACD,C,8BAzDH,Y,EA4DA,MAAO,SAAA,CAAA,sBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAoD,CACzD,MAAO,IAAA,CAAA,gBAAA,CAAA,IAAA,CAA2BZ,IAAI,CAAJA,GAAAA,CAASa,SAAAA,CAAC,QAAIC,CAAAA,KAAK,CAA9C,CAA8C,CAAT,EAAVd,CAA3B,CAAP,MAAO,CAAP,CACD","sourcesContent":["import AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport { adapt } from './AnimatedBlock';\nimport { val } from '../val';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedCallFunc extends AnimatedNode {\n  _previousCallID;\n  _what;\n  _args;\n  _params;\n  constructor(what, args, params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      args.every(el => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'args' argument should be of type AnimatedNode but got ${args}`\n    );\n    invariant(\n      params.every(el => el instanceof AnimatedNode),\n      `Reanimated: every AnimatedCallFunc 'params' argument should be of type AnimatedNode but got ${params}`\n    );\n    super(\n      {\n        type: 'callfunc',\n        what,\n        args,\n        params,\n      },\n      [...args]\n    );\n    this._what = what;\n    this._args = args;\n    this._params = params;\n  }\n\n  toString() {\n    return `AnimatedCallFunc, id: ${this.__nodeID}`;\n  }\n\n  beginContext() {\n    this._previousCallID = getCallID();\n    setCallID(getCallID() + '/' + this.__nodeID);\n\n    this._params.forEach((param, index) => {\n      param.beginContext(this._args[index], this._previousCallID);\n    });\n  }\n\n  endContext() {\n    this._params.forEach((param, index) => {\n      param.endContext();\n    });\n    setCallID(this._previousCallID);\n  }\n\n  __onEvaluate() {\n    this.beginContext();\n    const value = val(this._what);\n    this.endContext();\n    return value;\n  }\n}\n\nexport function createAnimatedCallFunc(proc, args, params) {\n  return new AnimatedCallFunc(proc, args.map(p => adapt(p)), params);\n}\n"]},"metadata":{},"sourceType":"module"}