{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{createAnimatedSet as set}from\"../core/AnimatedSet\";import _interpolate from\"../derived/interpolate\";import InternalAnimatedValue from\"./InternalAnimatedValue\";import Platform from\"react-native-web/dist/exports/Platform\";import{evaluateOnce}from\"../derived/evaluateOnce\";import ReanimatedModule from\"../ReanimatedModule\";import{val}from\"../val\";var AnimatedValue=function(_InternalAnimatedValu){_inherits(AnimatedValue,_InternalAnimatedValu);var _super=_createSuper(AnimatedValue);function AnimatedValue(){_classCallCheck(this,AnimatedValue);return _super.apply(this,arguments);}_createClass(AnimatedValue,[{key:\"setValue\",value:function setValue(value){this.__detachAnimation(this._animation);if(Platform.OS==='web'||Platform.OS==='windows'||Platform.OS==='macos'){this._updateValue(val(value));}else{if(ReanimatedModule.setValue&&typeof value==='number'){ReanimatedModule.setValue(this.__nodeID,value);}else{evaluateOnce(set(this,value),this);}}}},{key:\"toString\",value:function toString(){return\"AnimatedValue, id: \".concat(this.__nodeID);}},{key:\"interpolate\",value:function interpolate(config){return _interpolate(this,config);}}]);return AnimatedValue;}(InternalAnimatedValue);export{AnimatedValue as default};","map":{"version":3,"sources":["AnimatedValue.js"],"names":["createAnimatedSet","setValue","Platform","val","ReanimatedModule","evaluateOnce","set","toString","interpolate"],"mappings":"qgCAAA,OAASA,iBAAiB,GAA1B,CAAA,GAAA,2BACA,MAAA,CAAA,YAAA,8BACA,MAAA,CAAA,qBAAA,+B,6DAEA,OAAA,YAAA,+BACA,MAAA,CAAA,gBAAA,2BACA,OAAA,GAAA,c,GAGe,CAAA,a,2QACbC,kBAAQ,KAARA,CAAgB,CACd,KAAA,iBAAA,CAAuB,KAAvB,UAAA,EACA,GAAIC,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EAAyBA,QAAQ,CAARA,EAAAA,GAAzBA,SAAAA,EAAsDA,QAAQ,CAARA,EAAAA,GAA1D,OAAA,CAAmF,CACjF,KAAA,YAAA,CAAkBC,GAAG,CAArB,KAAqB,CAArB,EADF,CAAA,IAEO,CACL,GAAIC,gBAAgB,CAAhBA,QAAAA,EAA6B,MAAA,CAAA,KAAA,GAAjC,QAAA,CAA4D,CAI1DA,gBAAgB,CAAhBA,QAAAA,CAA0B,KAA1BA,QAAAA,CAAAA,KAAAA,EAJF,CAAA,IAKO,CACLC,YAAY,CAACC,GAAG,CAAA,IAAA,CAAJ,KAAI,CAAJ,CAAZD,IAAY,CAAZA,CACD,CACF,CACF,C,wBAEDE,mBAAW,CACT,MAAA,sBAAA,MAAA,CAA6B,KAA7B,QAAA,CAAA,CACD,C,2BAEDC,qBAAW,MAAXA,CAAoB,CAClB,MAAOA,CAAAA,YAAW,CAAA,IAAA,CAAlB,MAAkB,CAAlB,CACD,C,2BAvBY,qB,SAAA,a","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { Platform } from 'react-native';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport ReanimatedModule from '../ReanimatedModule';\nimport { val } from '../val';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      this._updateValue(val(value));\n    } else {\n      if (ReanimatedModule.setValue && typeof value === 'number') {\n        // FIXME Remove it after some time\n        // For OTA-safety\n        // FIXME handle setting value with a node\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return `AnimatedValue, id: ${this.__nodeID}`;\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}