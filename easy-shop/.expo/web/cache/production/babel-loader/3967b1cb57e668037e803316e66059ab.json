{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Image from\"react-native-web/dist/exports/Image\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Easing from\"./Easing\";import AnimatedClock from\"./core/AnimatedClock\";import AnimatedValue from\"./core/AnimatedValue\";import AnimatedNode from\"./core/AnimatedNode\";import AnimatedCode from\"./core/AnimatedCode\";import*as base from\"./base\";import*as derived from\"./derived\";import createAnimatedComponent from\"./createAnimatedComponent\";import decay from\"./animations/decay\";import timing from\"./animations/timing\";import spring from\"./animations/spring\";import Animation from\"./animations/Animation\";import{addWhitelistedNativeProps,addWhitelistedUIProps}from\"./ConfigHelper\";import backwardCompatibleAnimWrapper from\"./animations/backwardCompatibleAnimWrapper\";import{Transition,Transitioning,createTransitioningComponent}from\"./Transitioning\";import SpringUtils from\"./animations/SpringUtils\";import useValue from\"./useValue\";var decayWrapper=backwardCompatibleAnimWrapper(decay,Animation.decayDefaultState);var timingWrapper=backwardCompatibleAnimWrapper(timing,Animation.timingDefaultState);var springWrapper=backwardCompatibleAnimWrapper(spring,Animation.springDefaultState);var Animated=_objectSpread(_objectSpread(_objectSpread({View:createAnimatedComponent(View),Text:createAnimatedComponent(Text),Image:createAnimatedComponent(Image),ScrollView:createAnimatedComponent(ScrollView),Code:AnimatedCode,createAnimatedComponent:createAnimatedComponent,Clock:AnimatedClock,Value:AnimatedValue,Node:AnimatedNode},base),derived),{},{decay:decayWrapper,timing:timingWrapper,spring:springWrapper,SpringUtils:SpringUtils,addWhitelistedNativeProps:addWhitelistedNativeProps,addWhitelistedUIProps:addWhitelistedUIProps,useValue:useValue});export default Animated;export*from\"./base\";export*from\"./derived\";export{Easing,Transitioning,Transition,createTransitioningComponent,AnimatedClock as Clock,AnimatedValue as Value,AnimatedNode as Node,decayWrapper as decay,timingWrapper as timing,springWrapper as spring,SpringUtils,useValue};","map":{"version":3,"sources":["Animated.js"],"names":["decayWrapper","backwardCompatibleAnimWrapper","Animation","timingWrapper","springWrapper","Animated","View","createAnimatedComponent","Text","Image","ScrollView","Code","Clock","Value","Node","AnimatedNode","decay","timing","spring","SpringUtils","addWhitelistedNativeProps","addWhitelistedUIProps","useValue","AnimatedClock","AnimatedValue"],"mappings":"orCACA,MAAA,CAAA,MAAA,gBACA,MAAA,CAAA,aAAA,4BACA,MAAA,CAAA,aAAA,4BACA,MAAA,CAAA,YAAA,2BACA,MAAA,CAAA,YAAA,2BACA,MAAO,GAAP,CAAA,IAAA,cACA,MAAO,GAAP,CAAA,OAAA,iBACA,MAAA,CAAA,uBAAA,iCACA,MAAA,CAAA,KAAA,0BACA,MAAA,CAAA,MAAA,2BACA,MAAA,CAAA,MAAA,2BACA,MAAA,CAAA,SAAA,8BACA,OAAA,yBAAA,CAAA,qBAAA,sBAIA,MAAA,CAAA,6BAAA,kDACA,OAAA,UAAA,CAAA,aAAA,CAAA,4BAAA,uBAKA,MAAA,CAAA,WAAA,gCACA,MAAA,CAAA,QAAA,kBAEA,GAAMA,CAAAA,YAAY,CAAGC,6BAA6B,CAAA,KAAA,CAEhDC,SAAS,CAFX,iBAAkD,CAAlD,CAIA,GAAMC,CAAAA,aAAa,CAAGF,6BAA6B,CAAA,MAAA,CAEjDC,SAAS,CAFX,kBAAmD,CAAnD,CAIA,GAAME,CAAAA,aAAa,CAAGH,6BAA6B,CAAA,MAAA,CAEjDC,SAAS,CAFX,kBAAmD,CAAnD,CAIA,GAAMG,CAAAA,QAAQ,CAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAEZC,IAAI,CAAEC,uBAAuB,CAFjB,IAEiB,CAFjB,CAGZC,IAAI,CAAED,uBAAuB,CAHjB,IAGiB,CAHjB,CAIZE,KAAK,CAAEF,uBAAuB,CAJlB,KAIkB,CAJlB,CAKZG,UAAU,CAAEH,uBAAuB,CALvB,UAKuB,CALvB,CAMZI,IAAI,CANQ,YAAA,CAOZJ,uBAPY,CAOZA,uBAPY,CAUZK,KAAK,CAVO,aAAA,CAWZC,KAAK,CAXO,aAAA,CAYZC,IAAI,CAAEC,YAZM,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAmBZC,KAAK,CAnBO,YAAA,CAoBZC,MAAM,CApBM,aAAA,CAqBZC,MAAM,CArBM,aAAA,CAsBZC,WAtBY,CAsBZA,WAtBY,CAyBZC,yBAzBY,CAyBZA,yBAzBY,CA0BZC,qBA1BY,CA0BZA,qBA1BY,CA6BZC,QAAAA,CAAAA,QA7BY,CAAA,CAAd,CAgCA,cAAA,CAAA,QAAA,CAGA,oBACA,uBAEA,OAAA,MAAA,CAAA,aAAA,CAAA,UAAA,CAAA,4BAAA,CAMEC,aAAa,GANf,CAAA,KAAA,CAOEC,aAAa,GAPf,CAAA,KAAA,CAQET,YAAY,GARd,CAAA,IAAA,CAUEf,YAAY,GAVd,CAAA,KAAA,CAWEG,aAAa,GAXf,CAAA,MAAA,CAYEC,aAAa,GAZf,CAAA,MAAA,CAAA,WAAA,CAAA,QAAA","sourcesContent":["import { Image, ScrollView, Text, View } from 'react-native';\nimport Easing from './Easing';\nimport AnimatedClock from './core/AnimatedClock';\nimport AnimatedValue from './core/AnimatedValue';\nimport AnimatedNode from './core/AnimatedNode';\nimport AnimatedCode from './core/AnimatedCode';\nimport * as base from './base';\nimport * as derived from './derived';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport decay from './animations/decay';\nimport timing from './animations/timing';\nimport spring from './animations/spring';\nimport Animation from './animations/Animation';\nimport {\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n} from './ConfigHelper';\nimport backwardCompatibleAnimWrapper from './animations/backwardCompatibleAnimWrapper';\nimport {\n  Transition,\n  Transitioning,\n  createTransitioningComponent,\n} from './Transitioning';\nimport SpringUtils from './animations/SpringUtils';\nimport useValue from './useValue';\n\nconst decayWrapper = backwardCompatibleAnimWrapper(\n  decay,\n  Animation.decayDefaultState\n);\nconst timingWrapper = backwardCompatibleAnimWrapper(\n  timing,\n  Animation.timingDefaultState\n);\nconst springWrapper = backwardCompatibleAnimWrapper(\n  spring,\n  Animation.springDefaultState\n);\nconst Animated = {\n  // components\n  View: createAnimatedComponent(View),\n  Text: createAnimatedComponent(Text),\n  Image: createAnimatedComponent(Image),\n  ScrollView: createAnimatedComponent(ScrollView),\n  Code: AnimatedCode,\n  createAnimatedComponent,\n\n  // classes\n  Clock: AnimatedClock,\n  Value: AnimatedValue,\n  Node: AnimatedNode,\n\n  // operations\n  ...base,\n  ...derived,\n\n  // animations\n  decay: decayWrapper,\n  timing: timingWrapper,\n  spring: springWrapper,\n  SpringUtils,\n\n  // configuration\n  addWhitelistedNativeProps,\n  addWhitelistedUIProps,\n\n  // hooks\n  useValue,\n};\n\nexport default Animated;\n\n// operations\nexport * from './base';\nexport * from './derived';\n\nexport {\n  Easing,\n  Transitioning,\n  Transition,\n  createTransitioningComponent,\n  // classes\n  AnimatedClock as Clock,\n  AnimatedValue as Value,\n  AnimatedNode as Node,\n  // animations\n  decayWrapper as decay,\n  timingWrapper as timing,\n  springWrapper as spring,\n  SpringUtils,\n  // hooks\n  useValue,\n};\n"]},"metadata":{},"sourceType":"module"}